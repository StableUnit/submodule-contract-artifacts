{
  "address": "0x0E43bE2D381874F90a61f220dd32F3De3E5c3392",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "obj",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "approveSAFEModification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "apt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "coinJoin_join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "apt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "transferFrom",
          "type": "bool"
        }
      ],
      "name": "collateralJoin_join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "obj",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "denySAFEModification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "apt",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "ethJoin_join",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "exitETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "exitTokenCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "freeETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "freeTokenCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "taxCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "generateDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        }
      ],
      "name": "lockETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "taxCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wadD",
          "type": "uint256"
        }
      ],
      "name": "lockETHAndGenerateDebt",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "transferFrom",
          "type": "bool"
        }
      ],
      "name": "lockTokenCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "taxCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "safe",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deltaWad",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "transferFrom",
          "type": "bool"
        }
      ],
      "name": "lockTokenCollateralAndGenerateDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "deltaCollateral",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "deltaDebt",
          "type": "int256"
        }
      ],
      "name": "modifySAFECollateralization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "taxCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "collateralType",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "wadD",
          "type": "uint256"
        }
      ],
      "name": "openLockETHAndGenerateDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "taxCollector",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "collateralType",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amtC",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wadD",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "transferFrom",
          "type": "bool"
        }
      ],
      "name": "openLockTokenCollateralAndGenerateDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "collateralType",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "openSafe",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        }
      ],
      "name": "repayAllDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wadC",
          "type": "uint256"
        }
      ],
      "name": "repayAllDebtAndFreeETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amtC",
          "type": "uint256"
        }
      ],
      "name": "repayAllDebtAndFreeTokenCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "repayDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wadC",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wadD",
          "type": "uint256"
        }
      ],
      "name": "repayDebtAndFreeETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralJoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coinJoin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amtC",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wadD",
          "type": "uint256"
        }
      ],
      "name": "repayDebtAndFreeTokenCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gem",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rad",
          "type": "uint256"
        }
      ],
      "name": "transferInternalCoins",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "transferSafeOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxyRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "cdp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        }
      ],
      "name": "transferSafeOwnershipToProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "718eda4d028e950e5f4d05b8f13678da",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"approveSAFEModification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"apt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"coinJoin_join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"apt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferFrom\",\"type\":\"bool\"}],\"name\":\"collateralJoin_join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"denySAFEModification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"apt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"ethJoin_join\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"exitETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"exitTokenCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"freeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"freeTokenCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"generateDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"}],\"name\":\"lockETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wadD\",\"type\":\"uint256\"}],\"name\":\"lockETHAndGenerateDebt\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferFrom\",\"type\":\"bool\"}],\"name\":\"lockTokenCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"safe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deltaWad\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferFrom\",\"type\":\"bool\"}],\"name\":\"lockTokenCollateralAndGenerateDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"deltaCollateral\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaDebt\",\"type\":\"int256\"}],\"name\":\"modifySAFECollateralization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"collateralType\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"wadD\",\"type\":\"uint256\"}],\"name\":\"openLockETHAndGenerateDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taxCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"collateralType\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amtC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wadD\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferFrom\",\"type\":\"bool\"}],\"name\":\"openLockTokenCollateralAndGenerateDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"collateralType\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"openSafe\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"}],\"name\":\"repayAllDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wadC\",\"type\":\"uint256\"}],\"name\":\"repayAllDebtAndFreeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amtC\",\"type\":\"uint256\"}],\"name\":\"repayAllDebtAndFreeTokenCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"repayDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wadC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wadD\",\"type\":\"uint256\"}],\"name\":\"repayDebtAndFreeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralJoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinJoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amtC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wadD\",\"type\":\"uint256\"}],\"name\":\"repayDebtAndFreeTokenCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gem\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rad\",\"type\":\"uint256\"}],\"name\":\"transferInternalCoins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"transferSafeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cdp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"}],\"name\":\"transferSafeOwnershipToProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/makerdao/externalContracts/DssProxyActions.sol\":\"DssProxyActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/makerdao/externalContracts/DssProxyActions.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\n/// DssProxyActions.sol\\n\\n// Copyright (C) 2018-2020 Maker Ecosystem Growth Holdings, INC.\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU Affero General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU Affero General Public License for more details.\\n//\\n// You should have received a copy of the GNU Affero General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.6.12;\\n\\ninterface CoinLike {\\n    function approve(address, uint) external;\\n    function transfer(address, uint) external;\\n    function transferFrom(address, address, uint) external;\\n    function deposit() external payable;\\n    function withdraw(uint) external;\\n}\\n\\ninterface ManagerLike {\\n    function cdpCan(address, uint, address) external view returns (uint);\\n    function collateralTypes(uint) external view returns (bytes32);\\n    function owns(uint) external view returns (address);\\n    function safes(uint) external view returns (address);\\n    function safeEngine() external view returns (address);\\n    function openSafe(bytes32, address) external returns (uint);\\n    function transferSafeOwnership(uint, address) external;\\n    function modifySAFECollateralization(uint, int, int) external;\\n    function transferCollateral(uint, address, uint) external;\\n    function transferInternalCoins(uint, address, uint) external;\\n    function exit(address, uint, address, uint) external;\\n}\\n\\ninterface SafeEngineLike {\\n    function cdpRights(address, address) external view returns (uint);\\n    function collateralTypes(bytes32) external view returns (uint, uint, uint, uint, uint);\\n    function coinBalance(address) external view returns (uint);\\n    function safes(bytes32, address) external view returns (uint, uint);\\n    function modifySAFECollateralization(bytes32, address, address, address, int, int) external;\\n    function approveSAFEModification(address) external;\\n    function transferInternalCoins(address, address, uint) external;\\n}\\n\\ninterface CollateralJoinLike {\\n    function decimals() external returns (uint);\\n    function collateral() external returns (CoinLike);\\n    function join(address, uint) external payable;\\n    function exit(address, uint) external;\\n}\\n\\ninterface CoinJoinLike {\\n    function safeEngine() external returns (SafeEngineLike);\\n    function systemCoin() external returns (CoinLike);\\n    function join(address, uint) external payable;\\n    function exit(address, uint) external;\\n}\\n\\ninterface SafeModificationLike {\\n    function approveSAFEModification(address) external;\\n    function denySAFEModification(address) external;\\n}\\n\\ninterface taxCollectorLike {\\n    function taxSingle(bytes32) external returns (uint);\\n}\\n\\ninterface ProxyRegistryLike {\\n    function proxies(address) external view returns (address);\\n    function build(address) external returns (address);\\n}\\n\\ninterface ProxyLike {\\n    function owner() external view returns (address);\\n}\\n\\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n// WARNING: These functions meant to be used as a a library for a DSProxy. Some are unsafe if you call them directly.\\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n\\ncontract Common {\\n    uint256 constant RAY = 10 ** 27;\\n\\n    // Internal functions\\n\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\n        require(y == 0 || (z = x * y) / y == x, \\\"mul-overflow\\\");\\n    }\\n\\n    // Public functions\\n\\n    function coinJoin_join(address apt, address safe, uint wad) public {\\n        // Gets DAI from the user's wallet\\n        CoinJoinLike(apt).systemCoin().transferFrom(msg.sender, address(this), wad);\\n        // Approves adapter to take the DAI amount\\n        CoinJoinLike(apt).systemCoin().approve(apt, wad);\\n        // Joins DAI into the safeEngine\\n        CoinJoinLike(apt).join(safe, wad);\\n    }\\n}\\n\\ncontract DssProxyActions is Common {\\n    // Internal functions\\n\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x - y) <= x, \\\"sub-overflow\\\");\\n    }\\n\\n    function toInt(uint x) internal pure returns (int y) {\\n        y = int(x);\\n        require(y >= 0, \\\"int-overflow\\\");\\n    }\\n\\n    function toRad(uint wad) internal pure returns (uint rad) {\\n        rad = mul(wad, 10 ** 27);\\n    }\\n\\n    function convertTo18(address collateralJoin, uint256 amt) internal returns (uint256 wad) {\\n        // For those collaterals that have less than 18 decimals precision we need to do the conversion before passing to modifySAFECollateralization function\\n        // Adapters will automatically handle the difference of precision\\n        wad = mul(\\n            amt,\\n            10 ** (18 - CollateralJoinLike(collateralJoin).decimals())\\n        );\\n    }\\n\\n    function _getGeneratedDeltaDebt(\\n        address safeEngine,\\n        address taxCollector,\\n        address safe,\\n        bytes32 collateralType,\\n        uint wad\\n    ) internal returns (int deltaDebt) {\\n        // Updates stability fee rate\\n        uint rate = taxCollectorLike(taxCollector).taxSingle(collateralType);\\n\\n        // Gets DAI balance of the safe in the safeEngine\\n        uint dai = SafeEngineLike(safeEngine).coinBalance(safe);\\n\\n        // If there was already enough DAI in the safeEngine balance, just exits it without adding more debt\\n        if (dai < mul(wad, RAY)) {\\n            // Calculates the needed deltaDebt so together with the existing dai in the safeEngine is enough to exit wad amount of DAI tokens\\n            deltaDebt = toInt(sub(mul(wad, RAY), dai) / rate);\\n            // This is neeeded due lack of precision. It might need to sum an extra deltaDebt wei (for the given DAI wad amount)\\n            deltaDebt = mul(uint(deltaDebt), rate) < mul(wad, RAY) ? deltaDebt + 1 : deltaDebt;\\n        }\\n    }\\n\\n    function _getRepaidDeltaDebt(\\n        address safeEngine,\\n        uint dai,\\n        address safe,\\n        bytes32 collateralType\\n    ) internal view returns (int deltaDebt) {\\n        // Gets actual rate from the safeEngine\\n        (, uint rate,,,) = SafeEngineLike(safeEngine).collateralTypes(collateralType);\\n        // Gets actual safeDebt value of the safe\\n        (, uint safeDebt) = SafeEngineLike(safeEngine).safes(collateralType, safe);\\n\\n        // Uses the whole dai balance in the safeEngine to reduce the debt\\n        deltaDebt = toInt(dai / rate);\\n        // Checks the calculated deltaDebt is not higher than safe.safeDebt (total debt), otherwise uses its value\\n        deltaDebt = uint(deltaDebt) <= safeDebt ? - deltaDebt : - toInt(safeDebt);\\n    }\\n\\n    function _getWipeAllWad(\\n        address safeEngine,\\n        address usr,\\n        address safe,\\n        bytes32 collateralType\\n    ) internal view returns (uint wad) {\\n        // Gets actual rate from the safeEngine\\n        (, uint rate,,,) = SafeEngineLike(safeEngine).collateralTypes(collateralType);\\n        // Gets actual safeDebt value of the safe\\n        (, uint safeDebt) = SafeEngineLike(safeEngine).safes(collateralType, safe);\\n        // Gets actual dai amount in the safe\\n        uint dai = SafeEngineLike(safeEngine).coinBalance(usr);\\n\\n        uint rad = sub(mul(safeDebt, rate), dai);\\n        wad = rad / RAY;\\n\\n        // If the rad precision has some dust, it will need to request for 1 extra wad wei\\n        wad = mul(wad, RAY) < rad ? wad + 1 : wad;\\n    }\\n\\n    // Public functions\\n\\n    function transfer(address gem, address dst, uint amt) public {\\n        CoinLike(gem).transfer(dst, amt);\\n    }\\n\\n    function ethJoin_join(address apt, address safe) public payable {\\n        // Wraps ETH in WETH\\n        CollateralJoinLike(apt).collateral().deposit.value(msg.value)();\\n        // Approves adapter to take the WETH amount\\n        CollateralJoinLike(apt).collateral().approve(address(apt), msg.value);\\n        // Joins WETH collateral into the safeEngine\\n        CollateralJoinLike(apt).join(safe, msg.value);\\n    }\\n\\n    function collateralJoin_join(address apt, address safe, uint amt, bool transferFrom) public {\\n        // Only executes for tokens that have approval/transferFrom implementation\\n        if (transferFrom) {\\n            // Gets token from the user's wallet\\n            CollateralJoinLike(apt).collateral().transferFrom(msg.sender, address(this), amt);\\n            // Approves adapter to take the token amount\\n            CollateralJoinLike(apt).collateral().approve(apt, amt);\\n        }\\n        // Joins token collateral into the safeEngine\\n        CollateralJoinLike(apt).join(safe, amt);\\n    }\\n\\n    function approveSAFEModification(\\n        address obj,\\n        address usr\\n    ) public {\\n        SafeModificationLike(obj).approveSAFEModification(usr);\\n    }\\n\\n    function denySAFEModification(\\n        address obj,\\n        address usr\\n    ) public {\\n        SafeModificationLike(obj).denySAFEModification(usr);\\n    }\\n\\n    function openSafe(\\n        address manager,\\n        bytes32 collateralType,\\n        address usr\\n    ) public returns (uint cdp) {\\n        cdp = ManagerLike(manager).openSafe(collateralType, usr);\\n    }\\n\\n    function transferSafeOwnership(\\n        address manager,\\n        uint cdp,\\n        address usr\\n    ) public {\\n        ManagerLike(manager).transferSafeOwnership(cdp, usr);\\n    }\\n\\n    function transferSafeOwnershipToProxy(\\n        address proxyRegistry,\\n        address manager,\\n        uint cdp,\\n        address dst\\n    ) public {\\n        // Gets actual proxy address\\n        address proxy = ProxyRegistryLike(proxyRegistry).proxies(dst);\\n        // Checks if the proxy address already existed and dst address is still the owner\\n        if (proxy == address(0) || ProxyLike(proxy).owner() != dst) {\\n            uint csize;\\n            assembly {\\n                csize := extcodesize(dst)\\n            }\\n            // We want to avoid creating a proxy for a contract address that might not be able to handle proxies, then losing the CDP\\n            require(csize == 0, \\\"Dst-is-a-contract\\\");\\n            // Creates the proxy for the dst address\\n            proxy = ProxyRegistryLike(proxyRegistry).build(dst);\\n        }\\n        // Transfers CDP to the dst proxy\\n        transferSafeOwnership(manager, cdp, proxy);\\n    }\\n\\n    function transferCollateral(\\n        address manager,\\n        uint cdp,\\n        address dst,\\n        uint wad\\n    ) public {\\n        ManagerLike(manager).transferCollateral(cdp, dst, wad);\\n    }\\n\\n    function transferInternalCoins(\\n        address manager,\\n        uint cdp,\\n        address dst,\\n        uint rad\\n    ) public {\\n        ManagerLike(manager).transferInternalCoins(cdp, dst, rad);\\n    }\\n\\n    function modifySAFECollateralization(\\n        address manager,\\n        uint cdp,\\n        int deltaCollateral,\\n        int deltaDebt\\n    ) public {\\n        ManagerLike(manager).modifySAFECollateralization(cdp, deltaCollateral, deltaDebt);\\n    }\\n\\n    function lockETH(\\n        address manager,\\n        address ethJoin,\\n        uint cdp\\n    ) public payable {\\n        // Receives ETH amount, converts it to WETH and joins it into the safeEngine\\n        ethJoin_join(ethJoin, address(this));\\n        // Locks WETH amount into the CDP\\n        SafeEngineLike(ManagerLike(manager).safeEngine()).modifySAFECollateralization(\\n            ManagerLike(manager).collateralTypes(cdp),\\n            ManagerLike(manager).safes(cdp),\\n            address(this),\\n            address(this),\\n            toInt(msg.value),\\n            0\\n        );\\n    }\\n\\n//    function safeLockETH(\\n//        address manager,\\n//        address ethJoin,\\n//        uint cdp,\\n//        address owner\\n//    ) public payable {\\n//        require(ManagerLike(manager).owns(cdp) == owner, \\\"bad-owner\\\");\\n//        lockETH(manager, ethJoin, cdp);\\n//    }\\n\\n    function lockTokenCollateral(\\n        address manager,\\n        address collateralJoin,\\n        uint cdp,\\n        uint amt,\\n        bool transferFrom\\n    ) public {\\n        // Takes token amount from user's wallet and joins into the safeEngine\\n        collateralJoin_join(collateralJoin, address(this), amt, transferFrom);\\n        // Locks token amount into the CDP\\n        SafeEngineLike(ManagerLike(manager).safeEngine()).modifySAFECollateralization(\\n            ManagerLike(manager).collateralTypes(cdp),\\n            ManagerLike(manager).safes(cdp),\\n            address(this),\\n            address(this),\\n            toInt(convertTo18(collateralJoin, amt)),\\n            0\\n        );\\n    }\\n\\n//    function safeLockTokenCollateral(\\n//        address manager,\\n//        address collateralJoin,\\n//        uint cdp,\\n//        uint amt,\\n//        bool transferFrom,\\n//        address owner\\n//    ) public {\\n//        require(ManagerLike(manager).owns(cdp) == owner, \\\"bad-owner\\\");\\n//        lockTokenCollateral(manager, collateralJoin, cdp, amt, transferFrom);\\n//    }\\n\\n    function freeETH(\\n        address manager,\\n        address ethJoin,\\n        uint cdp,\\n        uint wad\\n    ) public {\\n        // Unlocks WETH amount from the CDP\\n        modifySAFECollateralization(manager, cdp, -toInt(wad), 0);\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), wad);\\n        // Exits WETH amount to proxy address as a token\\n        CollateralJoinLike(ethJoin).exit(address(this), wad);\\n        // Converts WETH to ETH\\n        CollateralJoinLike(ethJoin).collateral().withdraw(wad);\\n        // Sends ETH back to the user's wallet\\n        msg.sender.transfer(wad);\\n    }\\n\\n    function freeTokenCollateral(\\n        address manager,\\n        address collateralJoin,\\n        uint cdp,\\n        uint amt\\n    ) public {\\n        uint wad = convertTo18(collateralJoin, amt);\\n        // Unlocks token amount from the CDP\\n        modifySAFECollateralization(manager, cdp, -toInt(wad), 0);\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), wad);\\n        // Exits token amount to the user's wallet as a token\\n        CollateralJoinLike(collateralJoin).exit(msg.sender, amt);\\n    }\\n\\n    function exitETH(\\n        address manager,\\n        address ethJoin,\\n        uint cdp,\\n        uint wad\\n    ) public {\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), wad);\\n\\n        // Exits WETH amount to proxy address as a token\\n        CollateralJoinLike(ethJoin).exit(address(this), wad);\\n        // Converts WETH to ETH\\n        CollateralJoinLike(ethJoin).collateral().withdraw(wad);\\n        // Sends ETH back to the user's wallet\\n        msg.sender.transfer(wad);\\n    }\\n\\n    function exitTokenCollateral(\\n        address manager,\\n        address collateralJoin,\\n        uint cdp,\\n        uint amt\\n    ) public {\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), convertTo18(collateralJoin, amt));\\n\\n        // Exits token amount to the user's wallet as a token\\n        CollateralJoinLike(collateralJoin).exit(msg.sender, amt);\\n    }\\n\\n    function generateDebt(\\n        address manager,\\n        address taxCollector,\\n        address coinJoin,\\n        uint cdp,\\n        uint wad\\n    ) public {\\n        address safe = ManagerLike(manager).safes(cdp);\\n        address safeEngine = ManagerLike(manager).safeEngine();\\n        bytes32 collateralType = ManagerLike(manager).collateralTypes(cdp);\\n        // Generates debt in the CDP\\n        modifySAFECollateralization(manager, cdp, 0, _getGeneratedDeltaDebt(safeEngine, taxCollector, safe, collateralType, wad));\\n        // Moves the DAI amount (balance in the safeEngine in rad) to proxy's address\\n        transferInternalCoins(manager, cdp, address(this), toRad(wad));\\n        // Allows adapter to access to proxy's DAI balance in the safeEngine\\n        if (SafeEngineLike(safeEngine).cdpRights(address(this), address(coinJoin)) == 0) {\\n            SafeEngineLike(safeEngine).approveSAFEModification(coinJoin);\\n        }\\n        // Exits DAI to the user's wallet as a token\\n        CoinJoinLike(coinJoin).exit(msg.sender, wad);\\n    }\\n\\n    function repayDebt(\\n        address manager,\\n        address coinJoin,\\n        uint cdp,\\n        uint wad\\n    ) public {\\n        address safeEngine = ManagerLike(manager).safeEngine();\\n        address safe = ManagerLike(manager).safes(cdp);\\n        bytes32 collateralType = ManagerLike(manager).collateralTypes(cdp);\\n\\n        address own = ManagerLike(manager).owns(cdp);\\n        if (own == address(this) || ManagerLike(manager).cdpCan(own, cdp, address(this)) == 1) {\\n            // Joins DAI amount into the safeEngine\\n            coinJoin_join(coinJoin, safe, wad);\\n            // Paybacks debt to the CDP\\n            modifySAFECollateralization(manager, cdp, 0, _getRepaidDeltaDebt(safeEngine, SafeEngineLike(safeEngine).coinBalance(safe), safe, collateralType));\\n        } else {\\n            // Joins DAI amount into the safeEngine\\n            coinJoin_join(coinJoin, address(this), wad);\\n            // Paybacks debt to the CDP\\n            SafeEngineLike(safeEngine).modifySAFECollateralization(\\n                collateralType,\\n                safe,\\n                address(this),\\n                address(this),\\n                0,\\n                _getRepaidDeltaDebt(safeEngine, wad * RAY, safe, collateralType)\\n            );\\n        }\\n    }\\n\\n//    function safeRepayDebt(\\n//        address manager,\\n//        address coinJoin,\\n//        uint cdp,\\n//        uint wad,\\n//        address owner\\n//    ) public {\\n//        require(ManagerLike(manager).owns(cdp) == owner, \\\"bad-owner\\\");\\n//        repayDebt(manager, coinJoin, cdp, wad);\\n//    }\\n\\n    function repayAllDebt(\\n        address manager,\\n        address coinJoin,\\n        uint cdp\\n    ) public {\\n        address safeEngine = ManagerLike(manager).safeEngine();\\n        address safe = ManagerLike(manager).safes(cdp);\\n        bytes32 collateralType = ManagerLike(manager).collateralTypes(cdp);\\n        (, uint safeDebt) = SafeEngineLike(safeEngine).safes(collateralType, safe);\\n\\n        address own = ManagerLike(manager).owns(cdp);\\n        if (own == address(this) || ManagerLike(manager).cdpCan(own, cdp, address(this)) == 1) {\\n            // Joins DAI amount into the safeEngine\\n            coinJoin_join(coinJoin, safe, _getWipeAllWad(safeEngine, safe, safe, collateralType));\\n            // Paybacks debt to the CDP\\n            modifySAFECollateralization(manager, cdp, 0, -int(safeDebt));\\n        } else {\\n            // Joins DAI amount into the safeEngine\\n            coinJoin_join(coinJoin, address(this), _getWipeAllWad(safeEngine, address(this), safe, collateralType));\\n            // Paybacks debt to the CDP\\n            SafeEngineLike(safeEngine).modifySAFECollateralization(\\n                collateralType,\\n                safe,\\n                address(this),\\n                address(this),\\n                0,\\n                -int(safeDebt)\\n            );\\n        }\\n    }\\n\\n//    function safeRepayAllDebt(\\n//        address manager,\\n//        address coinJoin,\\n//        uint cdp,\\n//        address owner\\n//    ) public {\\n//        require(ManagerLike(manager).owns(cdp) == owner, \\\"bad-owner\\\");\\n//        repayAllDebt(manager, coinJoin, cdp);\\n//    }\\n\\n    function lockETHAndGenerateDebt(\\n        address manager,\\n        address taxCollector,\\n        address ethJoin,\\n        address coinJoin,\\n        uint cdp,\\n        uint wadD\\n    ) public payable {\\n        address safe = ManagerLike(manager).safes(cdp);\\n        address safeEngine = ManagerLike(manager).safeEngine();\\n        bytes32 collateralType = ManagerLike(manager).collateralTypes(cdp);\\n        // Receives ETH amount, converts it to WETH and joins it into the safeEngine\\n        ethJoin_join(ethJoin, safe);\\n        // Locks WETH amount into the CDP and generates debt\\n        modifySAFECollateralization(manager, cdp, toInt(msg.value), _getGeneratedDeltaDebt(safeEngine, taxCollector, safe, collateralType, wadD));\\n        // Moves the DAI amount (balance in the safeEngine in rad) to proxy's address\\n        transferInternalCoins(manager, cdp, address(this), toRad(wadD));\\n        // Allows adapter to access to proxy's DAI balance in the safeEngine\\n        if (SafeEngineLike(safeEngine).cdpRights(address(this), address(coinJoin)) == 0) {\\n            SafeEngineLike(safeEngine).approveSAFEModification(coinJoin);\\n        }\\n        // Exits DAI to the user's wallet as a token\\n        CoinJoinLike(coinJoin).exit(msg.sender, wadD);\\n    }\\n\\n    function openLockETHAndGenerateDebt(\\n        address manager,\\n        address taxCollector,\\n        address ethJoin,\\n        address coinJoin,\\n        bytes32 collateralType,\\n        uint wadD\\n    ) public payable returns (uint cdp) {\\n        cdp = openSafe(manager, collateralType, address(this));\\n        lockETHAndGenerateDebt(manager, taxCollector, ethJoin, coinJoin, cdp, wadD);\\n    }\\n\\n    function lockTokenCollateralAndGenerateDebt(\\n        address manager,\\n        address taxCollector,\\n        address collateralJoin,\\n        address coinJoin,\\n        uint safe,\\n        uint collateralAmount,\\n        uint deltaWad,\\n        bool transferFrom\\n    ) public {\\n        address safeHandler = ManagerLike(manager).safes(safe);\\n        address safeEngine = ManagerLike(manager).safeEngine();\\n        bytes32 collateralType = ManagerLike(manager).collateralTypes(safe);\\n        // Takes token amount from user's wallet and joins into the safeEngine\\n        collateralJoin_join(collateralJoin, safeHandler, collateralAmount, transferFrom);\\n        // Locks token amount into the SAFE and generates debt\\n        modifySAFECollateralization(manager, safe, toInt(convertTo18(collateralJoin, collateralAmount)), _getGeneratedDeltaDebt(safeEngine, taxCollector, safeHandler, collateralType, deltaWad));\\n        // Moves the COIN amount (balance in the safeEngine in rad) to proxy's address\\n        transferInternalCoins(manager, safe, address(this), toRad(deltaWad));\\n        // Allows adapter to access to proxy's COIN balance in the safeEngine\\n        if (SafeEngineLike(safeEngine).cdpRights(address(this), address(coinJoin)) == 0) {\\n            SafeEngineLike(safeEngine).approveSAFEModification(coinJoin);\\n        }\\n        // Exits COIN to the user's wallet as a token\\n        CoinJoinLike(coinJoin).exit(msg.sender, deltaWad);\\n    }\\n\\n    function openLockTokenCollateralAndGenerateDebt(\\n        address manager,\\n        address taxCollector,\\n        address collateralJoin,\\n        address coinJoin,\\n        bytes32 collateralType,\\n        uint amtC,\\n        uint wadD,\\n        bool transferFrom\\n    ) public returns (uint cdp) {\\n        cdp = openSafe(manager, collateralType, address(this));\\n        lockTokenCollateralAndGenerateDebt(manager, taxCollector, collateralJoin, coinJoin, cdp, amtC, wadD, transferFrom);\\n    }\\n\\n    function repayDebtAndFreeETH(\\n        address manager,\\n        address ethJoin,\\n        address coinJoin,\\n        uint cdp,\\n        uint wadC,\\n        uint wadD\\n    ) public {\\n        address safe = ManagerLike(manager).safes(cdp);\\n        // Joins DAI amount into the safeEngine\\n        coinJoin_join(coinJoin, safe, wadD);\\n        // Paybacks debt to the CDP and unlocks WETH amount from it\\n        modifySAFECollateralization(\\n            manager,\\n            cdp,\\n            -toInt(wadC),\\n            _getRepaidDeltaDebt(ManagerLike(manager).safeEngine(), SafeEngineLike(ManagerLike(manager).safeEngine()).coinBalance(safe), safe, ManagerLike(manager).collateralTypes(cdp))\\n        );\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), wadC);\\n        // Exits WETH amount to proxy address as a token\\n        CollateralJoinLike(ethJoin).exit(address(this), wadC);\\n        // Converts WETH to ETH\\n        CollateralJoinLike(ethJoin).collateral().withdraw(wadC);\\n        // Sends ETH back to the user's wallet\\n        msg.sender.transfer(wadC);\\n    }\\n\\n    function repayAllDebtAndFreeETH(\\n        address manager,\\n        address ethJoin,\\n        address coinJoin,\\n        uint cdp,\\n        uint wadC\\n    ) public {\\n        address safeEngine = ManagerLike(manager).safeEngine();\\n        address safe = ManagerLike(manager).safes(cdp);\\n        bytes32 collateralType = ManagerLike(manager).collateralTypes(cdp);\\n        (, uint safeDebt) = SafeEngineLike(safeEngine).safes(collateralType, safe);\\n\\n        // Joins DAI amount into the safeEngine\\n        coinJoin_join(coinJoin, safe, _getWipeAllWad(safeEngine, safe, safe, collateralType));\\n        // Paybacks debt to the CDP and unlocks WETH amount from it\\n        modifySAFECollateralization(\\n            manager,\\n            cdp,\\n            -toInt(wadC),\\n            -int(safeDebt)\\n        );\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), wadC);\\n        // Exits WETH amount to proxy address as a token\\n        CollateralJoinLike(ethJoin).exit(address(this), wadC);\\n        // Converts WETH to ETH\\n        CollateralJoinLike(ethJoin).collateral().withdraw(wadC);\\n        // Sends ETH back to the user's wallet\\n        msg.sender.transfer(wadC);\\n    }\\n\\n    function repayDebtAndFreeTokenCollateral(\\n        address manager,\\n        address collateralJoin,\\n        address coinJoin,\\n        uint cdp,\\n        uint amtC,\\n        uint wadD\\n    ) public {\\n        address safe = ManagerLike(manager).safes(cdp);\\n        // Joins DAI amount into the safeEngine\\n        coinJoin_join(coinJoin, safe, wadD);\\n        uint wadC = convertTo18(collateralJoin, amtC);\\n        // Paybacks debt to the CDP and unlocks token amount from it\\n        modifySAFECollateralization(\\n            manager,\\n            cdp,\\n            -toInt(wadC),\\n            _getRepaidDeltaDebt(ManagerLike(manager).safeEngine(), SafeEngineLike(ManagerLike(manager).safeEngine()).coinBalance(safe), safe, ManagerLike(manager).collateralTypes(cdp))\\n        );\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), wadC);\\n        // Exits token amount to the user's wallet as a token\\n        CollateralJoinLike(collateralJoin).exit(msg.sender, amtC);\\n    }\\n\\n    function repayAllDebtAndFreeTokenCollateral(\\n        address manager,\\n        address collateralJoin,\\n        address coinJoin,\\n        uint cdp,\\n        uint amtC\\n    ) public {\\n        address safeEngine = ManagerLike(manager).safeEngine();\\n        address safe = ManagerLike(manager).safes(cdp);\\n        bytes32 collateralType = ManagerLike(manager).collateralTypes(cdp);\\n        (, uint safeDebt) = SafeEngineLike(safeEngine).safes(collateralType, safe);\\n\\n        // Joins DAI amount into the safeEngine\\n        coinJoin_join(coinJoin, safe, _getWipeAllWad(safeEngine, safe, safe, collateralType));\\n        uint wadC = convertTo18(collateralJoin, amtC);\\n        // Paybacks debt to the CDP and unlocks token amount from it\\n        modifySAFECollateralization(\\n            manager,\\n            cdp,\\n            -toInt(wadC),\\n            -int(safeDebt)\\n        );\\n        // Moves the amount from the CDP safe to proxy's address\\n        transferCollateral(manager, cdp, address(this), wadC);\\n        // Exits token amount to the user's wallet as a token\\n        CollateralJoinLike(collateralJoin).exit(msg.sender, amtC);\\n    }\\n}\\n\",\"keccak256\":\"0x1ac3d384cdceb392eb3933cbdc88f0f9afba304e623a1151df1c7bcb3e908590\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615a0380620000216000396000f3fe6080604052600436106101c25760003560e01c80637b5a3b43116100f7578063beabacc811610095578063e25187c111610064578063e25187c114610fc6578063f19d3b41146110b6578063f7f898b014611125578063ff08ec26146111a0576101c2565b8063beabacc814610de5578063c42e34e714610e60578063de92b17514610ed1578063e205c10814610f58576101c2565b80639edd7207116100d15780639edd720714610b9e578063a033df1214610c4d578063b02f9e3d14610cb1578063b287615a14610d56576101c2565b80637b5a3b4314610a235780637b65158f14610aa8578063861b15eb14610b2d576101c2565b8063394041ff116101645780636093c9751161013e5780636093c975146107cd57806360eba4f11461085257806364e506a0146108f7578063746a5cf114610988576101c2565b8063394041ff146105aa578063437c050d146106255780635452324914610701576101c2565b80631c005fda116101a05780631c005fda1461038057806325817008146103fb5780632d418a33146104805780632dc469a314610505576101c2565b806303f2cd05146101c757806308f00e341461024c57806313cc55e4146102d1575b600080fd5b3480156101d357600080fd5b5061024a600480360360808110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611258565b005b34801561025857600080fd5b506102cf6004803603608081101561026f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506112fc565b005b3480156102dd57600080fd5b5061037e600480360360c08110156102f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506114cb565b005b34801561038c57600080fd5b506103f9600480360360608110156103a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611861565b005b34801561040757600080fd5b5061047e6004803603608081101561041e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611b23565b005b34801561048c57600080fd5b50610503600480360360808110156104a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061202c565b005b34801561051157600080fd5b506105a8600480360360a081101561052857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506120c3565b005b3480156105b657600080fd5b50610623600480360360608110156105cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123ff565b005b34801561063157600080fd5b506106ff600480360361010081101561064957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080351515906020019092919050505061248d565b005b6107b7600480360360c081101561071757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061285b565b6040518082815260200191505060405180910390f35b3480156107d957600080fd5b50610850600480360360808110156107f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050612882565b005b34801561085e57600080fd5b506108f5600480360360a081101561087557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050612944565b005b34801561090357600080fd5b50610986600480360360a081101561091a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803515159060200190929190505050612da5565b005b34801561099457600080fd5b50610a21600480360360808110156109ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613035565b005b348015610a2f57600080fd5b50610aa660048036036080811015610a4657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506132fd565b005b348015610ab457600080fd5b50610b2b60048036036080811015610acb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506134e4565b005b348015610b3957600080fd5b50610b9c60048036036040811015610b5057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061357b565b005b348015610baa57600080fd5b50610c4b600480360360c0811015610bc157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050613600565b005b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613abb565b005b348015610cbd57600080fd5b50610d54600480360360a0811015610cd457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050613d36565b005b348015610d6257600080fd5b50610dcf60048036036060811015610d7957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506140e5565b6040518082815260200191505060405180910390f35b348015610df157600080fd5b50610e5e60048036036060811015610e0857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061419c565b005b348015610e6c57600080fd5b50610ecf60048036036040811015610e8357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061422a565b005b348015610edd57600080fd5b50610f5660048036036080811015610ef457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035151590602001909291905050506142af565b005b610fc460048036036060811015610f6e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050614579565b005b348015610fd257600080fd5b506110a06004803603610100811015610fea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035151590602001909291905050506147fc565b6040518082815260200191505060405180910390f35b3480156110c257600080fd5b50611123600480360360808110156110d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050614827565b005b34801561113157600080fd5b5061119e6004803603606081101561114857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506148a8565b005b611256600480360360c08110156111b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050614dc0565b005b61126d8483306112688786615181565b6134e4565b8273ffffffffffffffffffffffffffffffffffffffff1663ef693bed33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156112de57600080fd5b505af11580156112f2573d6000803e3d6000fd5b5050505050505050565b611308848330846134e4565b8273ffffffffffffffffffffffffffffffffffffffff1663ef693bed30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561137957600080fd5b505af115801561138d573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113d957600080fd5b505af11580156113ed573d6000803e3d6000fd5b505050506040513d602081101561140357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561146657600080fd5b505af115801561147a573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156114c4573d6000803e3d6000fd5b5050505050565b60008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561151e57600080fd5b505afa158015611532573d6000803e3d6000fd5b505050506040513d602081101561154857600080fd5b81019080805190602001909291905050509050611566858284611861565b60006115728785615181565b90506117c288866115828461521d565b6000036117bd8c73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156115ce57600080fd5b505afa1580156115e2573d6000803e3d6000fd5b505050506040513d60208110156115f857600080fd5b81019080805190602001909291905050508d73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561164f57600080fd5b505afa158015611663573d6000803e3d6000fd5b505050506040513d602081101561167957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663fabde80c896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156116f057600080fd5b505afa158015611704573d6000803e3d6000fd5b505050506040513d602081101561171a57600080fd5b8101908080519060200190929190505050888f73ffffffffffffffffffffffffffffffffffffffff1663918b7cfe8e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561177d57600080fd5b505afa158015611791573d6000803e3d6000fd5b505050506040513d60208110156117a757600080fd5b810190808051906020019092919050505061529e565b614827565b6117ce888630846134e4565b8673ffffffffffffffffffffffffffffffffffffffff1663ef693bed33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b505050505050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a7e944556040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156118a957600080fd5b505af11580156118bd573d6000803e3d6000fd5b505050506040513d60208110156118d357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561197257600080fd5b505af1158015611986573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663a7e944556040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156119d257600080fd5b505af11580156119e6573d6000803e3d6000fd5b505050506040513d60208110156119fc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663095ea7b384836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611a7d57600080fd5b505af1158015611a91573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16633b4da69f83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611b0657600080fd5b505af1158015611b1a573d6000803e3d6000fd5b50505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015611b6b57600080fd5b505afa158015611b7f573d6000803e3d6000fd5b505050506040513d6020811015611b9557600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611bfb57600080fd5b505afa158015611c0f573d6000803e3d6000fd5b505050506040513d6020811015611c2557600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611c8b57600080fd5b505afa158015611c9f573d6000803e3d6000fd5b505050506040513d6020811015611cb557600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff16638161b120876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611d1b57600080fd5b505afa158015611d2f573d6000803e3d6000fd5b505050506040513d6020811015611d4557600080fd5b810190808051906020019092919050505090503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611e59575060018873ffffffffffffffffffffffffffffffffffffffff16635aebb4608389306040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015611e1c57600080fd5b505afa158015611e30573d6000803e3d6000fd5b505050506040513d6020811015611e4657600080fd5b8101908080519060200190929190505050145b15611f2757611e69878487611861565b611f2288876000611f1d888973ffffffffffffffffffffffffffffffffffffffff1663fabde80c8a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611edb57600080fd5b505afa158015611eef573d6000803e3d6000fd5b505050506040513d6020811015611f0557600080fd5b8101908080519060200190929190505050898961529e565b614827565b612022565b611f32873087611861565b8373ffffffffffffffffffffffffffffffffffffffff166399bec315838530306000611f6e8b6b033b2e3c9fd0803ce80000008e028c8c61529e565b6040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561200957600080fd5b505af115801561201d573d6000803e3d6000fd5b505050505b5050505050505050565b8373ffffffffffffffffffffffffffffffffffffffff1663660e16078484846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156120a557600080fd5b505af11580156120b9573d6000803e3d6000fd5b5050505050505050565b60008573ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561210b57600080fd5b505afa15801561211f573d6000803e3d6000fd5b505050506040513d602081101561213557600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561219b57600080fd5b505afa1580156121af573d6000803e3d6000fd5b505050506040513d60208110156121c557600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561222b57600080fd5b505afa15801561223f573d6000803e3d6000fd5b505050506040513d602081101561225557600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff16633d42250483856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b1580156122d857600080fd5b505afa1580156122ec573d6000803e3d6000fd5b505050506040513d604081101561230257600080fd5b810190808051906020019092919080519060200190929190505050915050612336878461233187878888615451565b611861565b60006123428987615181565b905061235e8a886123528461521d565b60000385600003614827565b61236a8a8830846134e4565b8873ffffffffffffffffffffffffffffffffffffffff1663ef693bed33886040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156123db57600080fd5b505af11580156123ef573d6000803e3d6000fd5b5050505050505050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663ce34aae983836040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561247057600080fd5b505af1158015612484573d6000803e3d6000fd5b50505050505050565b60008873ffffffffffffffffffffffffffffffffffffffff1663434efcbd866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156124e057600080fd5b505afa1580156124f4573d6000803e3d6000fd5b505050506040513d602081101561250a57600080fd5b8101908080519060200190929190505050905060008973ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561256557600080fd5b505afa158015612579573d6000803e3d6000fd5b505050506040513d602081101561258f57600080fd5b8101908080519060200190929190505050905060008a73ffffffffffffffffffffffffffffffffffffffff1663918b7cfe886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156125f557600080fd5b505afa158015612609573d6000803e3d6000fd5b505050506040513d602081101561261f57600080fd5b8101908080519060200190929190505050905061263e898488876142af565b6126678b886126556126508d8b615181565b61521d565b612662868f89888d6156d0565b614827565b61267b8b883061267689615896565b61202c565b60008273ffffffffffffffffffffffffffffffffffffffff1663da49bada308b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561270257600080fd5b505afa158015612716573d6000803e3d6000fd5b505050506040513d602081101561272c57600080fd5b810190808051906020019092919050505014156127c5578173ffffffffffffffffffffffffffffffffffffffff1663d94d4208896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156127ac57600080fd5b505af11580156127c0573d6000803e3d6000fd5b505050505b8773ffffffffffffffffffffffffffffffffffffffff1663ef693bed33876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561283657600080fd5b505af115801561284a573d6000803e3d6000fd5b505050505050505050505050505050565b60006128688784306140e5565b9050612878878787878587614dc0565b9695505050505050565b600061288e8483615181565b90506128a8858461289e8461521d565b6000036000614827565b6128b4858430846134e4565b8373ffffffffffffffffffffffffffffffffffffffff1663ef693bed33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561292557600080fd5b505af1158015612939573d6000803e3d6000fd5b505050505050505050565b60008573ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561298c57600080fd5b505afa1580156129a0573d6000803e3d6000fd5b505050506040513d60208110156129b657600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612a1c57600080fd5b505afa158015612a30573d6000803e3d6000fd5b505050506040513d6020811015612a4657600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612aac57600080fd5b505afa158015612ac0573d6000803e3d6000fd5b505050506040513d6020811015612ad657600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff16633d42250483856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015612b5957600080fd5b505afa158015612b6d573d6000803e3d6000fd5b505050506040513d6040811015612b8357600080fd5b810190808051906020019092919080519060200190929190505050915050612bb78784612bb287878888615451565b611861565b612bd18987612bc58861521d565b60000384600003614827565b612bdd898730886134e4565b8773ffffffffffffffffffffffffffffffffffffffff1663ef693bed30876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015612c4e57600080fd5b505af1158015612c62573d6000803e3d6000fd5b505050508773ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612cae57600080fd5b505af1158015612cc2573d6000803e3d6000fd5b505050506040513d6020811015612cd857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d866040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015612d3b57600080fd5b505af1158015612d4f573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015612d99573d6000803e3d6000fd5b50505050505050505050565b612db1843084846142af565b8473ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015612df757600080fd5b505afa158015612e0b573d6000803e3d6000fd5b505050506040513d6020811015612e2157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166399bec3158673ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612e9e57600080fd5b505afa158015612eb2573d6000803e3d6000fd5b505050506040513d6020811015612ec857600080fd5b81019080805190602001909291905050508773ffffffffffffffffffffffffffffffffffffffff1663434efcbd876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612f2a57600080fd5b505afa158015612f3e573d6000803e3d6000fd5b505050506040513d6020811015612f5457600080fd5b81019080805190602001909291905050503030612f79612f748b8a615181565b61521d565b60006040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561301657600080fd5b505af115801561302a573d6000803e3d6000fd5b505050505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff1663c4552791836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561309e57600080fd5b505afa1580156130b2573d6000803e3d6000fd5b505050506040513d60208110156130c857600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806131c257508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561316e57600080fd5b505afa158015613182573d6000803e3d6000fd5b505050506040513d602081101561319857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614155b156132eb576000823b905060008114613243576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4473742d69732d612d636f6e747261637400000000000000000000000000000081525060200191505060405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663f3701da2846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156132ac57600080fd5b505af11580156132c0573d6000803e3d6000fd5b505050506040513d60208110156132d657600080fd5b81019080805190602001909291905050509150505b6132f68484836123ff565b5050505050565b613315848361330b8461521d565b6000036000614827565b613321848330846134e4565b8273ffffffffffffffffffffffffffffffffffffffff1663ef693bed30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561339257600080fd5b505af11580156133a6573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156133f257600080fd5b505af1158015613406573d6000803e3d6000fd5b505050506040513d602081101561341c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561347f57600080fd5b505af1158015613493573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156134dd573d6000803e3d6000fd5b5050505050565b8373ffffffffffffffffffffffffffffffffffffffff1663871581a28484846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561355d57600080fd5b505af1158015613571573d6000803e3d6000fd5b5050505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663d94d4208826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156135e457600080fd5b505af11580156135f8573d6000803e3d6000fd5b505050505050565b60008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561365357600080fd5b505afa158015613667573d6000803e3d6000fd5b505050506040513d602081101561367d57600080fd5b8101908080519060200190929190505050905061369b858284611861565b6138e987856136a98661521d565b6000036138e48b73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156136f557600080fd5b505afa158015613709573d6000803e3d6000fd5b505050506040513d602081101561371f57600080fd5b81019080805190602001909291905050508c73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561377657600080fd5b505afa15801561378a573d6000803e3d6000fd5b505050506040513d60208110156137a057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663fabde80c886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561381757600080fd5b505afa15801561382b573d6000803e3d6000fd5b505050506040513d602081101561384157600080fd5b8101908080519060200190929190505050878e73ffffffffffffffffffffffffffffffffffffffff1663918b7cfe8d6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156138a457600080fd5b505afa1580156138b8573d6000803e3d6000fd5b505050506040513d60208110156138ce57600080fd5b810190808051906020019092919050505061529e565b614827565b6138f5878530866134e4565b8573ffffffffffffffffffffffffffffffffffffffff1663ef693bed30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561396657600080fd5b505af115801561397a573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156139c657600080fd5b505af11580156139da573d6000803e3d6000fd5b505050506040513d60208110156139f057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015613a5357600080fd5b505af1158015613a67573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015613ab1573d6000803e3d6000fd5b5050505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b0357600080fd5b505af1158015613b17573d6000803e3d6000fd5b505050506040513d6020811015613b2d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015613b8557600080fd5b505af1158015613b99573d6000803e3d6000fd5b50505050508173ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613be657600080fd5b505af1158015613bfa573d6000803e3d6000fd5b505050506040513d6020811015613c1057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663095ea7b383346040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015613c9157600080fd5b505af1158015613ca5573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16633b4da69f82346040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015613d1a57600080fd5b505af1158015613d2e573d6000803e3d6000fd5b505050505050565b60008573ffffffffffffffffffffffffffffffffffffffff1663434efcbd846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613d8957600080fd5b505afa158015613d9d573d6000803e3d6000fd5b505050506040513d6020811015613db357600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015613e0e57600080fd5b505afa158015613e22573d6000803e3d6000fd5b505050506040513d6020811015613e3857600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613e9e57600080fd5b505afa158015613eb2573d6000803e3d6000fd5b505050506040513d6020811015613ec857600080fd5b81019080805190602001909291905050509050613ef488866000613eef868c89888c6156d0565b614827565b613f08888630613f0388615896565b61202c565b60008273ffffffffffffffffffffffffffffffffffffffff1663da49bada30896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015613f8f57600080fd5b505afa158015613fa3573d6000803e3d6000fd5b505050506040513d6020811015613fb957600080fd5b81019080805190602001909291905050501415614052578173ffffffffffffffffffffffffffffffffffffffff1663d94d4208876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561403957600080fd5b505af115801561404d573d6000803e3d6000fd5b505050505b8573ffffffffffffffffffffffffffffffffffffffff1663ef693bed33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156140c357600080fd5b505af11580156140d7573d6000803e3d6000fd5b505050505050505050505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663730abfa284846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561415857600080fd5b505af115801561416c573d6000803e3d6000fd5b505050506040513d602081101561418257600080fd5b810190808051906020019092919050505090509392505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561420d57600080fd5b505af1158015614221573d6000803e3d6000fd5b50505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663d49d7867826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561429357600080fd5b505af11580156142a7573d6000803e3d6000fd5b505050505050565b80156144ea578373ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156142fd57600080fd5b505af1158015614311573d6000803e3d6000fd5b505050506040513d602081101561432757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156143c657600080fd5b505af11580156143da573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561442657600080fd5b505af115801561443a573d6000803e3d6000fd5b505050506040513d602081101561445057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663095ea7b385846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156144d157600080fd5b505af11580156144e5573d6000803e3d6000fd5b505050505b8373ffffffffffffffffffffffffffffffffffffffff16633b4da69f84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561455b57600080fd5b505af115801561456f573d6000803e3d6000fd5b5050505050505050565b6145838230613abb565b8273ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156145c957600080fd5b505afa1580156145dd573d6000803e3d6000fd5b505050506040513d60208110156145f357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166399bec3158473ffffffffffffffffffffffffffffffffffffffff1663918b7cfe846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561467057600080fd5b505afa158015614684573d6000803e3d6000fd5b505050506040513d602081101561469a57600080fd5b81019080805190602001909291905050508573ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156146fc57600080fd5b505afa158015614710573d6000803e3d6000fd5b505050506040513d602081101561472657600080fd5b810190808051906020019092919050505030306147423461521d565b60006040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b1580156147df57600080fd5b505af11580156147f3573d6000803e3d6000fd5b50505050505050565b60006148098986306140e5565b905061481b898989898589898961248d565b98975050505050505050565b8373ffffffffffffffffffffffffffffffffffffffff1663c78101f88484846040518463ffffffff1660e01b8152600401808481526020018381526020018281526020019350505050600060405180830381600087803b15801561488a57600080fd5b505af115801561489e573d6000803e3d6000fd5b5050505050505050565b60008373ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156148f057600080fd5b505afa158015614904573d6000803e3d6000fd5b505050506040513d602081101561491a57600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff1663434efcbd846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561498057600080fd5b505afa158015614994573d6000803e3d6000fd5b505050506040513d60208110156149aa57600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff1663918b7cfe856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614a1057600080fd5b505afa158015614a24573d6000803e3d6000fd5b505050506040513d6020811015614a3a57600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff16633d42250483856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015614abd57600080fd5b505afa158015614ad1573d6000803e3d6000fd5b505050506040513d6040811015614ae757600080fd5b81019080805190602001909291908051906020019092919050505091505060008773ffffffffffffffffffffffffffffffffffffffff16638161b120876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614b5857600080fd5b505afa158015614b6c573d6000803e3d6000fd5b505050506040513d6020811015614b8257600080fd5b810190808051906020019092919050505090503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480614c96575060018873ffffffffffffffffffffffffffffffffffffffff16635aebb4608389306040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015614c5957600080fd5b505afa158015614c6d573d6000803e3d6000fd5b505050506040513d6020811015614c8357600080fd5b8101908080519060200190929190505050145b15614cc657614cb18785614cac88888989615451565b611861565b614cc18887600085600003614827565b614db6565b614cdc8730614cd788308989615451565b611861565b8473ffffffffffffffffffffffffffffffffffffffff166399bec315848630306000886000036040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b158015614d9d57600080fd5b505af1158015614db1573d6000803e3d6000fd5b505050505b5050505050505050565b60008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614e1357600080fd5b505afa158015614e27573d6000803e3d6000fd5b505050506040513d6020811015614e3d57600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015614e9857600080fd5b505afa158015614eac573d6000803e3d6000fd5b505050506040513d6020811015614ec257600080fd5b8101908080519060200190929190505050905060008873ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614f2857600080fd5b505afa158015614f3c573d6000803e3d6000fd5b505050506040513d6020811015614f5257600080fd5b81019080805190602001909291905050509050614f6f8784613abb565b614f8f8986614f7d3461521d565b614f8a868d89888c6156d0565b614827565b614fa3898630614f9e88615896565b61202c565b60008273ffffffffffffffffffffffffffffffffffffffff1663da49bada30896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561502a57600080fd5b505afa15801561503e573d6000803e3d6000fd5b505050506040513d602081101561505457600080fd5b810190808051906020019092919050505014156150ed578173ffffffffffffffffffffffffffffffffffffffff1663d94d4208876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156150d457600080fd5b505af11580156150e8573d6000803e3d6000fd5b505050505b8573ffffffffffffffffffffffffffffffffffffffff1663ef693bed33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561515e57600080fd5b505af1158015615172573d6000803e3d6000fd5b50505050505050505050505050565b6000615215828473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156151cf57600080fd5b505af11580156151e3573d6000803e3d6000fd5b505050506040513d60208110156151f957600080fd5b8101908080519060200190929190505050601203600a0a6158b5565b905092915050565b60008190506000811215615299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f696e742d6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b919050565b6000808573ffffffffffffffffffffffffffffffffffffffff1663d07900bb846040518263ffffffff1660e01b81526004018082815260200191505060a06040518083038186803b1580156152f257600080fd5b505afa158015615306573d6000803e3d6000fd5b505050506040513d60a081101561531c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060008673ffffffffffffffffffffffffffffffffffffffff16633d42250485876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b1580156153cb57600080fd5b505afa1580156153df573d6000803e3d6000fd5b505050506040513d60408110156153f557600080fd5b81019080805190602001909291908051906020019092919050505091505061542582878161541f57fe5b0461521d565b925080831115615440576154388161521d565b600003615445565b826000035b92505050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff1663d07900bb846040518263ffffffff1660e01b81526004018082815260200191505060a06040518083038186803b1580156154a557600080fd5b505afa1580156154b9573d6000803e3d6000fd5b505050506040513d60a08110156154cf57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060008673ffffffffffffffffffffffffffffffffffffffff16633d42250485876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b15801561557e57600080fd5b505afa158015615592573d6000803e3d6000fd5b505050506040513d60408110156155a857600080fd5b81019080805190602001909291908051906020019092919050505091505060008773ffffffffffffffffffffffffffffffffffffffff1663fabde80c886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561562f57600080fd5b505afa158015615643573d6000803e3d6000fd5b505050506040513d602081101561565957600080fd5b81019080805190602001909291905050509050600061568161567b84866158b5565b8361594a565b90506b033b2e3c9fd0803ce8000000818161569857fe5b049450806156b2866b033b2e3c9fd0803ce80000006158b5565b106156bd57846156c2565b600185015b945050505050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff16636c50dbba856040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561572657600080fd5b505af115801561573a573d6000803e3d6000fd5b505050506040513d602081101561575057600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663fabde80c876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156157cc57600080fd5b505afa1580156157e0573d6000803e3d6000fd5b505050506040513d60208110156157f657600080fd5b8101908080519060200190929190505050905061581f846b033b2e3c9fd0803ce80000006158b5565b81101561588b5761585682615849615843876b033b2e3c9fd0803ce80000006158b5565b8461594a565b8161585057fe5b0461521d565b925061586e846b033b2e3c9fd0803ce80000006158b5565b61587884846158b5565b106158835782615888565b600183015b92505b505095945050505050565b60006158ae826b033b2e3c9fd0803ce80000006158b5565b9050919050565b6000808214806158d257508282838502925082816158cf57fe5b04145b615944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6d756c2d6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b60008282840391508111156159c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7375622d6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b9291505056fea2646970667358221220860dd79107d2035ac1cfcf48ebbc60e0e8fccc64366dde655f9192578a024d8e64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106101c25760003560e01c80637b5a3b43116100f7578063beabacc811610095578063e25187c111610064578063e25187c114610fc6578063f19d3b41146110b6578063f7f898b014611125578063ff08ec26146111a0576101c2565b8063beabacc814610de5578063c42e34e714610e60578063de92b17514610ed1578063e205c10814610f58576101c2565b80639edd7207116100d15780639edd720714610b9e578063a033df1214610c4d578063b02f9e3d14610cb1578063b287615a14610d56576101c2565b80637b5a3b4314610a235780637b65158f14610aa8578063861b15eb14610b2d576101c2565b8063394041ff116101645780636093c9751161013e5780636093c975146107cd57806360eba4f11461085257806364e506a0146108f7578063746a5cf114610988576101c2565b8063394041ff146105aa578063437c050d146106255780635452324914610701576101c2565b80631c005fda116101a05780631c005fda1461038057806325817008146103fb5780632d418a33146104805780632dc469a314610505576101c2565b806303f2cd05146101c757806308f00e341461024c57806313cc55e4146102d1575b600080fd5b3480156101d357600080fd5b5061024a600480360360808110156101ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611258565b005b34801561025857600080fd5b506102cf6004803603608081101561026f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506112fc565b005b3480156102dd57600080fd5b5061037e600480360360c08110156102f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506114cb565b005b34801561038c57600080fd5b506103f9600480360360608110156103a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611861565b005b34801561040757600080fd5b5061047e6004803603608081101561041e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611b23565b005b34801561048c57600080fd5b50610503600480360360808110156104a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061202c565b005b34801561051157600080fd5b506105a8600480360360a081101561052857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506120c3565b005b3480156105b657600080fd5b50610623600480360360608110156105cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123ff565b005b34801561063157600080fd5b506106ff600480360361010081101561064957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080351515906020019092919050505061248d565b005b6107b7600480360360c081101561071757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061285b565b6040518082815260200191505060405180910390f35b3480156107d957600080fd5b50610850600480360360808110156107f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050612882565b005b34801561085e57600080fd5b506108f5600480360360a081101561087557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050612944565b005b34801561090357600080fd5b50610986600480360360a081101561091a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803515159060200190929190505050612da5565b005b34801561099457600080fd5b50610a21600480360360808110156109ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613035565b005b348015610a2f57600080fd5b50610aa660048036036080811015610a4657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506132fd565b005b348015610ab457600080fd5b50610b2b60048036036080811015610acb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506134e4565b005b348015610b3957600080fd5b50610b9c60048036036040811015610b5057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061357b565b005b348015610baa57600080fd5b50610c4b600480360360c0811015610bc157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050613600565b005b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613abb565b005b348015610cbd57600080fd5b50610d54600480360360a0811015610cd457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050613d36565b005b348015610d6257600080fd5b50610dcf60048036036060811015610d7957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506140e5565b6040518082815260200191505060405180910390f35b348015610df157600080fd5b50610e5e60048036036060811015610e0857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061419c565b005b348015610e6c57600080fd5b50610ecf60048036036040811015610e8357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061422a565b005b348015610edd57600080fd5b50610f5660048036036080811015610ef457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035151590602001909291905050506142af565b005b610fc460048036036060811015610f6e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050614579565b005b348015610fd257600080fd5b506110a06004803603610100811015610fea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035151590602001909291905050506147fc565b6040518082815260200191505060405180910390f35b3480156110c257600080fd5b50611123600480360360808110156110d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050614827565b005b34801561113157600080fd5b5061119e6004803603606081101561114857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506148a8565b005b611256600480360360c08110156111b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050614dc0565b005b61126d8483306112688786615181565b6134e4565b8273ffffffffffffffffffffffffffffffffffffffff1663ef693bed33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156112de57600080fd5b505af11580156112f2573d6000803e3d6000fd5b5050505050505050565b611308848330846134e4565b8273ffffffffffffffffffffffffffffffffffffffff1663ef693bed30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561137957600080fd5b505af115801561138d573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113d957600080fd5b505af11580156113ed573d6000803e3d6000fd5b505050506040513d602081101561140357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561146657600080fd5b505af115801561147a573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156114c4573d6000803e3d6000fd5b5050505050565b60008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561151e57600080fd5b505afa158015611532573d6000803e3d6000fd5b505050506040513d602081101561154857600080fd5b81019080805190602001909291905050509050611566858284611861565b60006115728785615181565b90506117c288866115828461521d565b6000036117bd8c73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156115ce57600080fd5b505afa1580156115e2573d6000803e3d6000fd5b505050506040513d60208110156115f857600080fd5b81019080805190602001909291905050508d73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561164f57600080fd5b505afa158015611663573d6000803e3d6000fd5b505050506040513d602081101561167957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663fabde80c896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156116f057600080fd5b505afa158015611704573d6000803e3d6000fd5b505050506040513d602081101561171a57600080fd5b8101908080519060200190929190505050888f73ffffffffffffffffffffffffffffffffffffffff1663918b7cfe8e6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561177d57600080fd5b505afa158015611791573d6000803e3d6000fd5b505050506040513d60208110156117a757600080fd5b810190808051906020019092919050505061529e565b614827565b6117ce888630846134e4565b8673ffffffffffffffffffffffffffffffffffffffff1663ef693bed33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b505050505050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a7e944556040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156118a957600080fd5b505af11580156118bd573d6000803e3d6000fd5b505050506040513d60208110156118d357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561197257600080fd5b505af1158015611986573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663a7e944556040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156119d257600080fd5b505af11580156119e6573d6000803e3d6000fd5b505050506040513d60208110156119fc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663095ea7b384836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611a7d57600080fd5b505af1158015611a91573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16633b4da69f83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611b0657600080fd5b505af1158015611b1a573d6000803e3d6000fd5b50505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015611b6b57600080fd5b505afa158015611b7f573d6000803e3d6000fd5b505050506040513d6020811015611b9557600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611bfb57600080fd5b505afa158015611c0f573d6000803e3d6000fd5b505050506040513d6020811015611c2557600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611c8b57600080fd5b505afa158015611c9f573d6000803e3d6000fd5b505050506040513d6020811015611cb557600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff16638161b120876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611d1b57600080fd5b505afa158015611d2f573d6000803e3d6000fd5b505050506040513d6020811015611d4557600080fd5b810190808051906020019092919050505090503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611e59575060018873ffffffffffffffffffffffffffffffffffffffff16635aebb4608389306040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015611e1c57600080fd5b505afa158015611e30573d6000803e3d6000fd5b505050506040513d6020811015611e4657600080fd5b8101908080519060200190929190505050145b15611f2757611e69878487611861565b611f2288876000611f1d888973ffffffffffffffffffffffffffffffffffffffff1663fabde80c8a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611edb57600080fd5b505afa158015611eef573d6000803e3d6000fd5b505050506040513d6020811015611f0557600080fd5b8101908080519060200190929190505050898961529e565b614827565b612022565b611f32873087611861565b8373ffffffffffffffffffffffffffffffffffffffff166399bec315838530306000611f6e8b6b033b2e3c9fd0803ce80000008e028c8c61529e565b6040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561200957600080fd5b505af115801561201d573d6000803e3d6000fd5b505050505b5050505050505050565b8373ffffffffffffffffffffffffffffffffffffffff1663660e16078484846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156120a557600080fd5b505af11580156120b9573d6000803e3d6000fd5b5050505050505050565b60008573ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561210b57600080fd5b505afa15801561211f573d6000803e3d6000fd5b505050506040513d602081101561213557600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561219b57600080fd5b505afa1580156121af573d6000803e3d6000fd5b505050506040513d60208110156121c557600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561222b57600080fd5b505afa15801561223f573d6000803e3d6000fd5b505050506040513d602081101561225557600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff16633d42250483856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b1580156122d857600080fd5b505afa1580156122ec573d6000803e3d6000fd5b505050506040513d604081101561230257600080fd5b810190808051906020019092919080519060200190929190505050915050612336878461233187878888615451565b611861565b60006123428987615181565b905061235e8a886123528461521d565b60000385600003614827565b61236a8a8830846134e4565b8873ffffffffffffffffffffffffffffffffffffffff1663ef693bed33886040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156123db57600080fd5b505af11580156123ef573d6000803e3d6000fd5b5050505050505050505050505050565b8273ffffffffffffffffffffffffffffffffffffffff1663ce34aae983836040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561247057600080fd5b505af1158015612484573d6000803e3d6000fd5b50505050505050565b60008873ffffffffffffffffffffffffffffffffffffffff1663434efcbd866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156124e057600080fd5b505afa1580156124f4573d6000803e3d6000fd5b505050506040513d602081101561250a57600080fd5b8101908080519060200190929190505050905060008973ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561256557600080fd5b505afa158015612579573d6000803e3d6000fd5b505050506040513d602081101561258f57600080fd5b8101908080519060200190929190505050905060008a73ffffffffffffffffffffffffffffffffffffffff1663918b7cfe886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156125f557600080fd5b505afa158015612609573d6000803e3d6000fd5b505050506040513d602081101561261f57600080fd5b8101908080519060200190929190505050905061263e898488876142af565b6126678b886126556126508d8b615181565b61521d565b612662868f89888d6156d0565b614827565b61267b8b883061267689615896565b61202c565b60008273ffffffffffffffffffffffffffffffffffffffff1663da49bada308b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561270257600080fd5b505afa158015612716573d6000803e3d6000fd5b505050506040513d602081101561272c57600080fd5b810190808051906020019092919050505014156127c5578173ffffffffffffffffffffffffffffffffffffffff1663d94d4208896040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156127ac57600080fd5b505af11580156127c0573d6000803e3d6000fd5b505050505b8773ffffffffffffffffffffffffffffffffffffffff1663ef693bed33876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561283657600080fd5b505af115801561284a573d6000803e3d6000fd5b505050505050505050505050505050565b60006128688784306140e5565b9050612878878787878587614dc0565b9695505050505050565b600061288e8483615181565b90506128a8858461289e8461521d565b6000036000614827565b6128b4858430846134e4565b8373ffffffffffffffffffffffffffffffffffffffff1663ef693bed33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561292557600080fd5b505af1158015612939573d6000803e3d6000fd5b505050505050505050565b60008573ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561298c57600080fd5b505afa1580156129a0573d6000803e3d6000fd5b505050506040513d60208110156129b657600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612a1c57600080fd5b505afa158015612a30573d6000803e3d6000fd5b505050506040513d6020811015612a4657600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612aac57600080fd5b505afa158015612ac0573d6000803e3d6000fd5b505050506040513d6020811015612ad657600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff16633d42250483856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015612b5957600080fd5b505afa158015612b6d573d6000803e3d6000fd5b505050506040513d6040811015612b8357600080fd5b810190808051906020019092919080519060200190929190505050915050612bb78784612bb287878888615451565b611861565b612bd18987612bc58861521d565b60000384600003614827565b612bdd898730886134e4565b8773ffffffffffffffffffffffffffffffffffffffff1663ef693bed30876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015612c4e57600080fd5b505af1158015612c62573d6000803e3d6000fd5b505050508773ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612cae57600080fd5b505af1158015612cc2573d6000803e3d6000fd5b505050506040513d6020811015612cd857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d866040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015612d3b57600080fd5b505af1158015612d4f573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc869081150290604051600060405180830381858888f19350505050158015612d99573d6000803e3d6000fd5b50505050505050505050565b612db1843084846142af565b8473ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015612df757600080fd5b505afa158015612e0b573d6000803e3d6000fd5b505050506040513d6020811015612e2157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166399bec3158673ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612e9e57600080fd5b505afa158015612eb2573d6000803e3d6000fd5b505050506040513d6020811015612ec857600080fd5b81019080805190602001909291905050508773ffffffffffffffffffffffffffffffffffffffff1663434efcbd876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612f2a57600080fd5b505afa158015612f3e573d6000803e3d6000fd5b505050506040513d6020811015612f5457600080fd5b81019080805190602001909291905050503030612f79612f748b8a615181565b61521d565b60006040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561301657600080fd5b505af115801561302a573d6000803e3d6000fd5b505050505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff1663c4552791836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561309e57600080fd5b505afa1580156130b2573d6000803e3d6000fd5b505050506040513d60208110156130c857600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806131c257508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561316e57600080fd5b505afa158015613182573d6000803e3d6000fd5b505050506040513d602081101561319857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614155b156132eb576000823b905060008114613243576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4473742d69732d612d636f6e747261637400000000000000000000000000000081525060200191505060405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663f3701da2846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156132ac57600080fd5b505af11580156132c0573d6000803e3d6000fd5b505050506040513d60208110156132d657600080fd5b81019080805190602001909291905050509150505b6132f68484836123ff565b5050505050565b613315848361330b8461521d565b6000036000614827565b613321848330846134e4565b8273ffffffffffffffffffffffffffffffffffffffff1663ef693bed30836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561339257600080fd5b505af11580156133a6573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156133f257600080fd5b505af1158015613406573d6000803e3d6000fd5b505050506040513d602081101561341c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561347f57600080fd5b505af1158015613493573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156134dd573d6000803e3d6000fd5b5050505050565b8373ffffffffffffffffffffffffffffffffffffffff1663871581a28484846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561355d57600080fd5b505af1158015613571573d6000803e3d6000fd5b5050505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663d94d4208826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156135e457600080fd5b505af11580156135f8573d6000803e3d6000fd5b505050505050565b60008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561365357600080fd5b505afa158015613667573d6000803e3d6000fd5b505050506040513d602081101561367d57600080fd5b8101908080519060200190929190505050905061369b858284611861565b6138e987856136a98661521d565b6000036138e48b73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156136f557600080fd5b505afa158015613709573d6000803e3d6000fd5b505050506040513d602081101561371f57600080fd5b81019080805190602001909291905050508c73ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b15801561377657600080fd5b505afa15801561378a573d6000803e3d6000fd5b505050506040513d60208110156137a057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663fabde80c886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561381757600080fd5b505afa15801561382b573d6000803e3d6000fd5b505050506040513d602081101561384157600080fd5b8101908080519060200190929190505050878e73ffffffffffffffffffffffffffffffffffffffff1663918b7cfe8d6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156138a457600080fd5b505afa1580156138b8573d6000803e3d6000fd5b505050506040513d60208110156138ce57600080fd5b810190808051906020019092919050505061529e565b614827565b6138f5878530866134e4565b8573ffffffffffffffffffffffffffffffffffffffff1663ef693bed30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561396657600080fd5b505af115801561397a573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156139c657600080fd5b505af11580156139da573d6000803e3d6000fd5b505050506040513d60208110156139f057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015613a5357600080fd5b505af1158015613a67573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015613ab1573d6000803e3d6000fd5b5050505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613b0357600080fd5b505af1158015613b17573d6000803e3d6000fd5b505050506040513d6020811015613b2d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015613b8557600080fd5b505af1158015613b99573d6000803e3d6000fd5b50505050508173ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b158015613be657600080fd5b505af1158015613bfa573d6000803e3d6000fd5b505050506040513d6020811015613c1057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663095ea7b383346040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015613c9157600080fd5b505af1158015613ca5573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16633b4da69f82346040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015613d1a57600080fd5b505af1158015613d2e573d6000803e3d6000fd5b505050505050565b60008573ffffffffffffffffffffffffffffffffffffffff1663434efcbd846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613d8957600080fd5b505afa158015613d9d573d6000803e3d6000fd5b505050506040513d6020811015613db357600080fd5b8101908080519060200190929190505050905060008673ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015613e0e57600080fd5b505afa158015613e22573d6000803e3d6000fd5b505050506040513d6020811015613e3857600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613e9e57600080fd5b505afa158015613eb2573d6000803e3d6000fd5b505050506040513d6020811015613ec857600080fd5b81019080805190602001909291905050509050613ef488866000613eef868c89888c6156d0565b614827565b613f08888630613f0388615896565b61202c565b60008273ffffffffffffffffffffffffffffffffffffffff1663da49bada30896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015613f8f57600080fd5b505afa158015613fa3573d6000803e3d6000fd5b505050506040513d6020811015613fb957600080fd5b81019080805190602001909291905050501415614052578173ffffffffffffffffffffffffffffffffffffffff1663d94d4208876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561403957600080fd5b505af115801561404d573d6000803e3d6000fd5b505050505b8573ffffffffffffffffffffffffffffffffffffffff1663ef693bed33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156140c357600080fd5b505af11580156140d7573d6000803e3d6000fd5b505050505050505050505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663730abfa284846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561415857600080fd5b505af115801561416c573d6000803e3d6000fd5b505050506040513d602081101561418257600080fd5b810190808051906020019092919050505090509392505050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561420d57600080fd5b505af1158015614221573d6000803e3d6000fd5b50505050505050565b8173ffffffffffffffffffffffffffffffffffffffff1663d49d7867826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561429357600080fd5b505af11580156142a7573d6000803e3d6000fd5b505050505050565b80156144ea578373ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156142fd57600080fd5b505af1158015614311573d6000803e3d6000fd5b505050506040513d602081101561432757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156143c657600080fd5b505af11580156143da573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663d8dfeb456040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561442657600080fd5b505af115801561443a573d6000803e3d6000fd5b505050506040513d602081101561445057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663095ea7b385846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156144d157600080fd5b505af11580156144e5573d6000803e3d6000fd5b505050505b8373ffffffffffffffffffffffffffffffffffffffff16633b4da69f84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561455b57600080fd5b505af115801561456f573d6000803e3d6000fd5b5050505050505050565b6145838230613abb565b8273ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156145c957600080fd5b505afa1580156145dd573d6000803e3d6000fd5b505050506040513d60208110156145f357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166399bec3158473ffffffffffffffffffffffffffffffffffffffff1663918b7cfe846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561467057600080fd5b505afa158015614684573d6000803e3d6000fd5b505050506040513d602081101561469a57600080fd5b81019080805190602001909291905050508573ffffffffffffffffffffffffffffffffffffffff1663434efcbd856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156146fc57600080fd5b505afa158015614710573d6000803e3d6000fd5b505050506040513d602081101561472657600080fd5b810190808051906020019092919050505030306147423461521d565b60006040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b1580156147df57600080fd5b505af11580156147f3573d6000803e3d6000fd5b50505050505050565b60006148098986306140e5565b905061481b898989898589898961248d565b98975050505050505050565b8373ffffffffffffffffffffffffffffffffffffffff1663c78101f88484846040518463ffffffff1660e01b8152600401808481526020018381526020018281526020019350505050600060405180830381600087803b15801561488a57600080fd5b505af115801561489e573d6000803e3d6000fd5b5050505050505050565b60008373ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b1580156148f057600080fd5b505afa158015614904573d6000803e3d6000fd5b505050506040513d602081101561491a57600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff1663434efcbd846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561498057600080fd5b505afa158015614994573d6000803e3d6000fd5b505050506040513d60208110156149aa57600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff1663918b7cfe856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614a1057600080fd5b505afa158015614a24573d6000803e3d6000fd5b505050506040513d6020811015614a3a57600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff16633d42250483856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015614abd57600080fd5b505afa158015614ad1573d6000803e3d6000fd5b505050506040513d6040811015614ae757600080fd5b81019080805190602001909291908051906020019092919050505091505060008773ffffffffffffffffffffffffffffffffffffffff16638161b120876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614b5857600080fd5b505afa158015614b6c573d6000803e3d6000fd5b505050506040513d6020811015614b8257600080fd5b810190808051906020019092919050505090503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480614c96575060018873ffffffffffffffffffffffffffffffffffffffff16635aebb4608389306040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015614c5957600080fd5b505afa158015614c6d573d6000803e3d6000fd5b505050506040513d6020811015614c8357600080fd5b8101908080519060200190929190505050145b15614cc657614cb18785614cac88888989615451565b611861565b614cc18887600085600003614827565b614db6565b614cdc8730614cd788308989615451565b611861565b8473ffffffffffffffffffffffffffffffffffffffff166399bec315848630306000886000036040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b158015614d9d57600080fd5b505af1158015614db1573d6000803e3d6000fd5b505050505b5050505050505050565b60008673ffffffffffffffffffffffffffffffffffffffff1663434efcbd846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614e1357600080fd5b505afa158015614e27573d6000803e3d6000fd5b505050506040513d6020811015614e3d57600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff166367aea3136040518163ffffffff1660e01b815260040160206040518083038186803b158015614e9857600080fd5b505afa158015614eac573d6000803e3d6000fd5b505050506040513d6020811015614ec257600080fd5b8101908080519060200190929190505050905060008873ffffffffffffffffffffffffffffffffffffffff1663918b7cfe866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614f2857600080fd5b505afa158015614f3c573d6000803e3d6000fd5b505050506040513d6020811015614f5257600080fd5b81019080805190602001909291905050509050614f6f8784613abb565b614f8f8986614f7d3461521d565b614f8a868d89888c6156d0565b614827565b614fa3898630614f9e88615896565b61202c565b60008273ffffffffffffffffffffffffffffffffffffffff1663da49bada30896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561502a57600080fd5b505afa15801561503e573d6000803e3d6000fd5b505050506040513d602081101561505457600080fd5b810190808051906020019092919050505014156150ed578173ffffffffffffffffffffffffffffffffffffffff1663d94d4208876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156150d457600080fd5b505af11580156150e8573d6000803e3d6000fd5b505050505b8573ffffffffffffffffffffffffffffffffffffffff1663ef693bed33866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561515e57600080fd5b505af1158015615172573d6000803e3d6000fd5b50505050505050505050505050565b6000615215828473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156151cf57600080fd5b505af11580156151e3573d6000803e3d6000fd5b505050506040513d60208110156151f957600080fd5b8101908080519060200190929190505050601203600a0a6158b5565b905092915050565b60008190506000811215615299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f696e742d6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b919050565b6000808573ffffffffffffffffffffffffffffffffffffffff1663d07900bb846040518263ffffffff1660e01b81526004018082815260200191505060a06040518083038186803b1580156152f257600080fd5b505afa158015615306573d6000803e3d6000fd5b505050506040513d60a081101561531c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060008673ffffffffffffffffffffffffffffffffffffffff16633d42250485876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b1580156153cb57600080fd5b505afa1580156153df573d6000803e3d6000fd5b505050506040513d60408110156153f557600080fd5b81019080805190602001909291908051906020019092919050505091505061542582878161541f57fe5b0461521d565b925080831115615440576154388161521d565b600003615445565b826000035b92505050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff1663d07900bb846040518263ffffffff1660e01b81526004018082815260200191505060a06040518083038186803b1580156154a557600080fd5b505afa1580156154b9573d6000803e3d6000fd5b505050506040513d60a08110156154cf57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060008673ffffffffffffffffffffffffffffffffffffffff16633d42250485876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b15801561557e57600080fd5b505afa158015615592573d6000803e3d6000fd5b505050506040513d60408110156155a857600080fd5b81019080805190602001909291908051906020019092919050505091505060008773ffffffffffffffffffffffffffffffffffffffff1663fabde80c886040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561562f57600080fd5b505afa158015615643573d6000803e3d6000fd5b505050506040513d602081101561565957600080fd5b81019080805190602001909291905050509050600061568161567b84866158b5565b8361594a565b90506b033b2e3c9fd0803ce8000000818161569857fe5b049450806156b2866b033b2e3c9fd0803ce80000006158b5565b106156bd57846156c2565b600185015b945050505050949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff16636c50dbba856040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561572657600080fd5b505af115801561573a573d6000803e3d6000fd5b505050506040513d602081101561575057600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663fabde80c876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156157cc57600080fd5b505afa1580156157e0573d6000803e3d6000fd5b505050506040513d60208110156157f657600080fd5b8101908080519060200190929190505050905061581f846b033b2e3c9fd0803ce80000006158b5565b81101561588b5761585682615849615843876b033b2e3c9fd0803ce80000006158b5565b8461594a565b8161585057fe5b0461521d565b925061586e846b033b2e3c9fd0803ce80000006158b5565b61587884846158b5565b106158835782615888565b600183015b92505b505095945050505050565b60006158ae826b033b2e3c9fd0803ce80000006158b5565b9050919050565b6000808214806158d257508282838502925082816158cf57fe5b04145b615944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6d756c2d6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b92915050565b60008282840391508111156159c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7375622d6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b9291505056fea2646970667358221220860dd79107d2035ac1cfcf48ebbc60e0e8fccc64366dde655f9192578a024d8e64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}