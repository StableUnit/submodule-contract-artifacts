{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_foundation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canModifyVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foundation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOracleTypeEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stabilityFeeValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationFeeValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "usdpLimit",
          "type": "uint256"
        }
      ],
      "name": "setCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFoundation",
          "type": "address"
        }
      ],
      "name": "setFoundation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setLiquidationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permit",
          "type": "bool"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_type",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setOracleType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setStabilityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "setTokenDebtLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "permit",
          "type": "bool"
        }
      ],
      "name": "setVaultAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stabilityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenDebtLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultParameters",
      "outputs": [
        {
          "internalType": "contract SuVaultParameters",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x61b881666661ede06e028f6bd76a460164a5a7ec46019805ae36756c5e888bd8",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "888278",
    "logsBloom": "0x
    "blockHash": "0xbc4642186acdf6275201b51843d9d6a07de7bf59ded7ee1a1238e182719b9f4b",
    "transactionHash": "0x61b881666661ede06e028f6bd76a460164a5a7ec46019805ae36756c5e888bd8",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "888278",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "0x948B3c65b89DF0B4894ABE91E6D02FE579834F8F"
  ],
  "numDeployments": 1,
  "solcInputHash": "9c90b91cdbeee1bffa3ac0f5ee01f939",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_foundation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canModifyVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"foundation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOracleTypeEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFeeValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationFeeValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdpLimit\",\"type\":\"uint256\"}],\"name\":\"setCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFoundation\",\"type\":\"address\"}],\"name\":\"setFoundation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setLiquidationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permit\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setOracleType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setStabilityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setTokenDebtLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"permit\",\"type\":\"bool\"}],\"name\":\"setVaultAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stabilityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDebtLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultParameters\",\"outputs\":[{\"internalType\":\"contract SuVaultParameters\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Yes, possibly with some logic change\"},\"foundation()\":{\"notice\":\"Beneficiaty as VotingEscrow.vy\"},\"isOracleTypeEnabled(uint256,address)\":{\"notice\":\"TODO:\"},\"liquidationFee(address)\":{\"notice\":\"yes\"},\"setCollateral(address,uint256,uint256,uint256)\":{\"notice\":\"Not sure it makes sense to split into create/edit functions\"},\"setLiquidationFee(address,uint256)\":{\"notice\":\"% 0 decimals, needede to get better variable names\"},\"setManager(address,bool)\":{\"notice\":\"YES, could be dangerous\"},\"setOracleType(uint256,address,bool)\":{\"notice\":\"All oracles implementation are numbered, so some of them support this particular asset\"},\"setStabilityFee(address,uint256)\":{\"notice\":\"No, it's APR ( per year, see calculateFee) percentrage, fee percentage; 3 decimals. YES, self-documented code-style is the best practice.\"},\"setTokenDebtLimit(address,uint256)\":{\"notice\":\"Yes, application of  principle of least priviledge needed\"},\"setVaultAccess(address,bool)\":{\"notice\":\"https://en.wikipedia.org/wiki/Principle_of_least_privilege \"},\"stabilityFee(address)\":{\"notice\":\"yes\"},\"tokenDebtLimit(address)\":{\"notice\":\"yes, limit for each collateral-assert\"},\"vault()\":{\"notice\":\"NO, needed for onlyVault modifier\"}},\"notice\":\"No, but it's a good idea to have it\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuVaultParameters.sol\":\"SuVaultParameters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/SuVaultParameters.sol\":{\"content\":\"// SPDX-License-Identifier: BSL 1.1\\r\\n\\r\\n/*\\r\\n  Copyright 2020 Unit Protocol: Artem Zakharov (az@unit.xyz).\\r\\n*/\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n\\r\\n// proxy for VaultParameters - other contracts should be inherited from here\\r\\n// this contract contains modifiers used in VaultParameters contract\\r\\n// it should be an abstract class because it cannot by instantiated/deployed directly,\\r\\n// its supposed to be inherited by VaultParameters contract which is deployed \\r\\n/// yes\\r\\ncontract Auth {\\r\\n    // but actually it does store address to vaultParameters contract?\\r\\n    SuVaultParameters public vaultParameters;\\r\\n\\r\\n    // its the same time parent of VaultParameters (inheritance)\\r\\n    // and same time its linking to VaultParameters (composition)\\r\\n    // one approach should be chosen: either inheritance or composition\\r\\n    // otherwise its very confusing\\r\\n    /// No, it's singleton\\r\\n    constructor(address _parameters) {\\r\\n        vaultParameters = SuVaultParameters(_parameters);\\r\\n    }\\r\\n\\r\\n    // check manager permission\\r\\n    modifier onlyManager() {\\r\\n        require(vaultParameters.isManager(msg.sender), \\\"Unit Protocol: onlyManager AUTH_FAILED\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // check permission to modify vault\\r\\n    modifier hasVaultAccess() {\\r\\n        require(vaultParameters.canModifyVault(msg.sender), \\\"Unit Protocol: hasVaultAccess AUTH_FAILED\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // check vault permission\\r\\n    modifier onlyVault() {\\r\\n        require(msg.sender == vaultParameters.vault(), \\\"Unit Protocol: onlyVault AUTH_FAILED\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n// VaultParameters is Singleton for Access Control\\r\\n// this looks like configuration contract\\r\\n// what are the rules to determine these configs for each new allowed collateral?\\r\\n/// yes, and for all collaterals\\r\\n// is DAO allowed to choose parameters for existing collaterals?\\r\\n/// \\r\\n// are there any limits to be enforced? i.e. fee cannot be over 100% percent\\r\\n/// No, but it's a good idea to have it\\r\\ncontract SuVaultParameters is Auth {\\r\\n    // stability fee can be different for each collateral\\r\\n    /// yes\\r\\n    mapping(address => uint) public stabilityFee;\\r\\n\\r\\n    // liquidation fee too can be different\\r\\n    /// yes\\r\\n    mapping(address => uint) public liquidationFee;\\r\\n\\r\\n    // map token to USDP mint limit\\r\\n    /// yes, limit for each collateral-assert\\r\\n    mapping(address => uint) public tokenDebtLimit;\\r\\n\\r\\n    // permissions to modify the Vault\\r\\n    mapping(address => bool) public canModifyVault;\\r\\n\\r\\n    // whether an account is manager\\r\\n    mapping(address => bool) public isManager;\\r\\n\\r\\n    // whether an oracle is enabled\\r\\n    /// TODO:\\r\\n    mapping(uint => mapping (address => bool)) public isOracleTypeEnabled;\\r\\n\\r\\n    // linked to the vault contract\\r\\n    // I think its better to inherit Vault from VaultParameters\\r\\n    /// NO, needed for onlyVault modifier\\r\\n    address payable public vault;\\r\\n\\r\\n    // what is foundation, DAO?\\r\\n    /// Beneficiaty as VotingEscrow.vy\\r\\n    address public foundation;\\r\\n\\r\\n    // creator of contract is manager, can it be the same as DAO or can it be removed later?\\r\\n    /// YES\\r\\n    // how can vault address be known at this moment?\\r\\n    /// Precult based on CREATE spec\\r\\n    // can be created another function to set vault address once deployed?\\r\\n    /// Yes, possibly with some logic change\\r\\n    constructor(address payable _vault, address _foundation) Auth(address(this)) {\\r\\n        require(_vault != address(0), \\\"Unit Protocol: ZERO_ADDRESS\\\");\\r\\n        require(_foundation != address(0), \\\"Unit Protocol: ZERO_ADDRESS\\\");\\r\\n\\r\\n        isManager[msg.sender] = true;\\r\\n        vault = _vault;\\r\\n        foundation = _foundation;\\r\\n    }\\r\\n\\r\\n     // existing managers can enable other managers\\r\\n     // one manager can disable all other managers - dangerous?\\r\\n     /// YES, could be dangerous\\r\\n    function setManager(address who, bool permit) external onlyManager {\\r\\n        isManager[who] = permit;\\r\\n    }\\r\\n\\r\\n    // similar function can be added to setVault\\r\\n    function setFoundation(address newFoundation) external onlyManager {\\r\\n        require(newFoundation != address(0), \\\"Unit Protocol: ZERO_ADDRESS\\\");\\r\\n        foundation = newFoundation;\\r\\n    }\\r\\n\\r\\n     // manager is allowed to add new collaterals and modify existing ones\\r\\n     // I think creating new collaterals and modifying existing ones should be separate functions\\r\\n     /// Yes, for sercurity reason, it's possible to add events for creating and edititing \\r\\n     // also different event should be emitted NewCollateral UpdatedCollateral accordingly\\r\\n     // those events can be handled on frontend to notify user about any changes in rules\\r\\n     /// Not sure it makes sense to split into create/edit functions\\r\\n    function setCollateral(\\r\\n        address asset,\\r\\n        uint stabilityFeeValue,\\r\\n        uint liquidationFeeValue,\\r\\n        uint usdpLimit\\r\\n    ) external onlyManager {\\r\\n        // stability fee should be validated in range, what is stability fee should be described here?\\r\\n        setStabilityFee(asset, stabilityFeeValue);\\r\\n        // liquidation fee should be validated in range, what is liquidation fee should be explained?\\r\\n        setLiquidationFee(asset, liquidationFeeValue);\\r\\n        // why debt limit for collateral is necessary? to manage risks in case of collateral failure?\\r\\n        setTokenDebtLimit(asset, usdpLimit);\\r\\n    }\\r\\n\\r\\n     // manager can choose who is allowed to modify vault, \\r\\n     // what does it mean to modify vault and why permission separate from manager himself?\\r\\n     /// https://en.wikipedia.org/wiki/Principle_of_least_privilege \\r\\n    function setVaultAccess(address who, bool permit) external onlyManager {\\r\\n        canModifyVault[who] = permit;\\r\\n    }\\r\\n\\r\\n    // stability fee is measured as the number of coins per year or percentage? \\r\\n    // this should be clarified in argument name i.e. stabilityFeePercentageYearly\\r\\n    /// No, it's APR ( per year, see calculateFee) percentrage, fee percentage; 3 decimals.\\r\\n    /// YES, self-documented code-style is the best practice.\\r\\n    function setStabilityFee(address asset, uint newValue) public onlyManager {\\r\\n        stabilityFee[asset] = newValue;\\r\\n    }\\r\\n\\r\\n    // the same with liquidation fee is not clear\\r\\n    /// % 0 decimals, needede to get better variable names\\r\\n    function setLiquidationFee(address asset, uint newValue) public onlyManager {\\r\\n        require(newValue <= 100, \\\"Unit Protocol: VALUE_OUT_OF_RANGE\\\");\\r\\n        liquidationFee[asset] = newValue;\\r\\n    }\\r\\n\\r\\n     // what are allowed types? enum should be defined\\r\\n     // types out of range should fail transaction\\r\\n    /// All oracles implementation are numbered, so some of them support this particular asset\\r\\n    function setOracleType(uint _type, address asset, bool enabled) public onlyManager {\\r\\n        isOracleTypeEnabled[_type][asset] = enabled;\\r\\n    }\\r\\n\\r\\n     // debt limit can be changed for any collateral along with liquidation and stability fees\\r\\n     // seems like managers have too much power - that can be dangerous given multiple managers?\\r\\n     /// Yes, application of  principle of least priviledge needed\\r\\n    function setTokenDebtLimit(address asset, uint limit) public onlyManager {\\r\\n        tokenDebtLimit[asset] = limit;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xbc2ccb04d4de0500943dc32b624de04fb451b928c8a65c6928ca78ee39d99693\",\"license\":\"BSL 1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610eff380380610eff83398101604081905261002f9161013d565b600080546001600160a01b031916301790556001600160a01b03821661009c5760405162461bcd60e51b815260206004820152601b60248201527f556e69742050726f746f636f6c3a205a45524f5f41444452455353000000000060448201526064015b60405180910390fd5b6001600160a01b0381166100f25760405162461bcd60e51b815260206004820152601b60248201527f556e69742050726f746f636f6c3a205a45524f5f4144445245535300000000006044820152606401610093565b336000908152600560205260409020805460ff19166001179055600780546001600160a01b039384166001600160a01b0319918216179091556008805492909316911617905561018e565b6000806040838503121561014f578182fd5b825161015a81610176565b602084015190925061016b81610176565b809150509250929050565b6001600160a01b038116811461018b57600080fd5b50565b610d628061019d6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063bf33bd4c116100b2578063ede2362f11610081578063f3ae241511610066578063f3ae24151461029e578063fbfa77cf146102c1578063fec0feb3146102d457600080fd5b8063ede2362f1461026b578063f2e323ba1461027e57600080fd5b8063bf33bd4c14610212578063c8023af414610225578063cc9a10a614610245578063db3543f51461025857600080fd5b8063997a2572116100ee578063997a2572146101ab578063a526ae2c146101d9578063a5e90eee146101ec578063aca345ee146101ff57600080fd5b80630db063b01461012057806338507ff51461015857806341fbb0501461016d5780634df1434114610198575b600080fd5b61014361012e366004610bdd565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61016b610166366004610c5d565b610302565b005b600854610180906001600160a01b031681565b6040516001600160a01b03909116815260200161014f565b61016b6101a6366004610c34565b610401565b6101cb6101b9366004610bdd565b60016020526000908152604090205481565b60405190815260200161014f565b61016b6101e7366004610c34565b6104f3565b61016b6101fa366004610bfe565b6105e5565b600054610180906001600160a01b031681565b61016b610220366004610c34565b6106e6565b6101cb610233366004610bdd565b60026020526000908152604090205481565b61016b610253366004610cdc565b61084f565b61016b610266366004610bdd565b61095a565b61016b610279366004610bfe565b610ac0565b6101cb61028c366004610bdd565b60036020526000908152604090205481565b6101436102ac366004610bdd565b60056020526000908152604090205460ff1681565b600754610180906001600160a01b031681565b6101436102e2366004610cb1565b600660209081526000928352604080842090915290825290205460ff1681565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561034557600080fd5b505afa158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610c95565b6103dd5760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084015b60405180910390fd5b6103e784846104f3565b6103f184836106e6565b6103fb8482610401565b50505050565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561044457600080fd5b505afa158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610c95565b6104d75760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03909116600090815260036020526040902055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190610c95565b6105c95760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03909116600090815260016020526040902055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561062857600080fd5b505afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610c95565b6106bb5760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561072957600080fd5b505afa15801561073d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107619190610c95565b6107bc5760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b60648111156108335760405162461bcd60e51b815260206004820152602160248201527f556e69742050726f746f636f6c3a2056414c55455f4f55545f4f465f52414e4760448201527f450000000000000000000000000000000000000000000000000000000000000060648201526084016103d4565b6001600160a01b03909116600090815260026020526040902055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561089257600080fd5b505afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca9190610c95565b6109255760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b60009283526006602090815260408085206001600160a01b039490941685529290529120805460ff1916911515919091179055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561099d57600080fd5b505afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190610c95565b610a305760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b038116610a865760405162461bcd60e51b815260206004820152601b60248201527f556e69742050726f746f636f6c3a205a45524f5f41444452455353000000000060448201526064016103d4565b600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b158015610b0357600080fd5b505afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b9190610c95565b610b965760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b80356001600160a01b0381168114610bd857600080fd5b919050565b600060208284031215610bee578081fd5b610bf782610bc1565b9392505050565b60008060408385031215610c10578081fd5b610c1983610bc1565b91506020830135610c2981610d1b565b809150509250929050565b60008060408385031215610c46578182fd5b610c4f83610bc1565b946020939093013593505050565b60008060008060808587031215610c72578182fd5b610c7b85610bc1565b966020860135965060408601359560600135945092505050565b600060208284031215610ca6578081fd5b8151610bf781610d1b565b60008060408385031215610cc3578182fd5b82359150610cd360208401610bc1565b90509250929050565b600080600060608486031215610cf0578283fd5b83359250610d0060208501610bc1565b91506040840135610d1081610d1b565b809150509250925092565b8015158114610d2957600080fd5b5056fea2646970667358221220220cfc36bdd9ca978c48a47284f85a98868e4a77aba7e700c0f3afe6fd1e16f664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061011b5760003560e01c8063bf33bd4c116100b2578063ede2362f11610081578063f3ae241511610066578063f3ae24151461029e578063fbfa77cf146102c1578063fec0feb3146102d457600080fd5b8063ede2362f1461026b578063f2e323ba1461027e57600080fd5b8063bf33bd4c14610212578063c8023af414610225578063cc9a10a614610245578063db3543f51461025857600080fd5b8063997a2572116100ee578063997a2572146101ab578063a526ae2c146101d9578063a5e90eee146101ec578063aca345ee146101ff57600080fd5b80630db063b01461012057806338507ff51461015857806341fbb0501461016d5780634df1434114610198575b600080fd5b61014361012e366004610bdd565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61016b610166366004610c5d565b610302565b005b600854610180906001600160a01b031681565b6040516001600160a01b03909116815260200161014f565b61016b6101a6366004610c34565b610401565b6101cb6101b9366004610bdd565b60016020526000908152604090205481565b60405190815260200161014f565b61016b6101e7366004610c34565b6104f3565b61016b6101fa366004610bfe565b6105e5565b600054610180906001600160a01b031681565b61016b610220366004610c34565b6106e6565b6101cb610233366004610bdd565b60026020526000908152604090205481565b61016b610253366004610cdc565b61084f565b61016b610266366004610bdd565b61095a565b61016b610279366004610bfe565b610ac0565b6101cb61028c366004610bdd565b60036020526000908152604090205481565b6101436102ac366004610bdd565b60056020526000908152604090205460ff1681565b600754610180906001600160a01b031681565b6101436102e2366004610cb1565b600660209081526000928352604080842090915290825290205460ff1681565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561034557600080fd5b505afa158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610c95565b6103dd5760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084015b60405180910390fd5b6103e784846104f3565b6103f184836106e6565b6103fb8482610401565b50505050565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561044457600080fd5b505afa158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610c95565b6104d75760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03909116600090815260036020526040902055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190610c95565b6105c95760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03909116600090815260016020526040902055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561062857600080fd5b505afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190610c95565b6106bb5760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561072957600080fd5b505afa15801561073d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107619190610c95565b6107bc5760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b60648111156108335760405162461bcd60e51b815260206004820152602160248201527f556e69742050726f746f636f6c3a2056414c55455f4f55545f4f465f52414e4760448201527f450000000000000000000000000000000000000000000000000000000000000060648201526084016103d4565b6001600160a01b03909116600090815260026020526040902055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561089257600080fd5b505afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca9190610c95565b6109255760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b60009283526006602090815260408085206001600160a01b039490941685529290529120805460ff1916911515919091179055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b15801561099d57600080fd5b505afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190610c95565b610a305760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b038116610a865760405162461bcd60e51b815260206004820152601b60248201527f556e69742050726f746f636f6c3a205a45524f5f41444452455353000000000060448201526064016103d4565b600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60005460405163f3ae241560e01b81523360048201526001600160a01b039091169063f3ae24159060240160206040518083038186803b158015610b0357600080fd5b505afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b9190610c95565b610b965760405162461bcd60e51b815260206004820152602660248201527f556e69742050726f746f636f6c3a206f6e6c794d616e6167657220415554485f60448201526511905253115160d21b60648201526084016103d4565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b80356001600160a01b0381168114610bd857600080fd5b919050565b600060208284031215610bee578081fd5b610bf782610bc1565b9392505050565b60008060408385031215610c10578081fd5b610c1983610bc1565b91506020830135610c2981610d1b565b809150509250929050565b60008060408385031215610c46578182fd5b610c4f83610bc1565b946020939093013593505050565b60008060008060808587031215610c72578182fd5b610c7b85610bc1565b966020860135965060408601359560600135945092505050565b600060208284031215610ca6578081fd5b8151610bf781610d1b565b60008060408385031215610cc3578182fd5b82359150610cd360208401610bc1565b90509250929050565b600080600060608486031215610cf0578283fd5b83359250610d0060208501610bc1565b91506040840135610d1081610d1b565b809150509250925092565b8015158114610d2957600080fd5b5056fea2646970667358221220220cfc36bdd9ca978c48a47284f85a98868e4a77aba7e700c0f3afe6fd1e16f664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Yes, possibly with some logic change"
      },
      "foundation()": {
        "notice": "Beneficiaty as VotingEscrow.vy"
      },
      "isOracleTypeEnabled(uint256,address)": {
        "notice": "TODO:"
      },
      "liquidationFee(address)": {
        "notice": "yes"
      },
      "setCollateral(address,uint256,uint256,uint256)": {
        "notice": "Not sure it makes sense to split into create/edit functions"
      },
      "setLiquidationFee(address,uint256)": {
        "notice": "% 0 decimals, needede to get better variable names"
      },
      "setManager(address,bool)": {
        "notice": "YES, could be dangerous"
      },
      "setOracleType(uint256,address,bool)": {
        "notice": "All oracles implementation are numbered, so some of them support this particular asset"
      },
      "setStabilityFee(address,uint256)": {
        "notice": "No, it's APR ( per year, see calculateFee) percentrage, fee percentage; 3 decimals. YES, self-documented code-style is the best practice."
      },
      "setTokenDebtLimit(address,uint256)": {
        "notice": "Yes, application of  principle of least priviledge needed"
      },
      "setVaultAccess(address,bool)": {
        "notice": "https://en.wikipedia.org/wiki/Principle_of_least_privilege "
      },
      "stabilityFee(address)": {
        "notice": "yes"
      },
      "tokenDebtLimit(address)": {
        "notice": "yes, limit for each collateral-assert"
      },
      "vault()": {
        "notice": "NO, needed for onlyVault modifier"
      }
    },
    "notice": "No, but it's a good idea to have it",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4608,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "vaultParameters",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(SuVaultParameters)4917"
      },
      {
        "astId": 4670,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "stabilityFee",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4675,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "liquidationFee",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4680,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "tokenDebtLimit",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4684,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "canModifyVault",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4688,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "isManager",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4695,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "isOracleTypeEnabled",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 4698,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "vault",
        "offset": 0,
        "slot": "7",
        "type": "t_address_payable"
      },
      {
        "astId": 4701,
        "contract": "contracts/SuVaultParameters.sol:SuVaultParameters",
        "label": "foundation",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(SuVaultParameters)4917": {
        "encoding": "inplace",
        "label": "contract SuVaultParameters",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}