{
  "address": "0xC639C86FAEE398d5cC7137bBA00Ce43e5217f07B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTier",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapWETHForDAI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapWETHForToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapWETHForWBTC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xce0be810ac0e8ec831684815b43da64ce6e019820adb888c0f6585040bfedf1c",
  "receipt": {
    "to": null,
    "from": "0x2b8DC2cc8D545Bc9E5a2015c8eCfC5dc74316477",
    "contractAddress": "0xC639C86FAEE398d5cC7137bBA00Ce43e5217f07B",
    "transactionIndex": 111,
    "gasUsed": "458557",
    "logsBloom": "0x
    "blockHash": "0x3ac2c1b85f041556d6ccd1f60af8f4a5250dfd9ad3a1b77657d705e0730687e6",
    "transactionHash": "0xce0be810ac0e8ec831684815b43da64ce6e019820adb888c0f6585040bfedf1c",
    "logs": [],
    "blockNumber": 5469888,
    "cumulativeGasUsed": "12336234",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE592427A0AEce92De3Edee1F18E0157C05861564"
  ],
  "numDeployments": 1,
  "solcInputHash": "763a020caf9e1e6ef21291ab55ec3cde",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapWETHForDAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapWETHForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapWETHForWBTC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/mocks/SimpleSwap.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\\n\\ncontract SimpleSwap {\\n    ISwapRouter public immutable swapRouter;\\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n    address public constant WBTC = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;\\n    uint24 public constant feeTier = 3000;\\n\\n    constructor(ISwapRouter _swapRouter) {\\n        swapRouter = _swapRouter;\\n    }\\n\\n    // Docs: https://docs.uniswap.org/contracts/v3/guides/swaps/single-swaps\\n    function swapWETHForDAI(uint amountIn) external returns (uint256 amountOut) {\\n        // Transfer the specified amount of WETH9 to this contract.\\n        TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);\\n        // Approve the router to spend WETH9.\\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\\n        // Create the params that will be used to execute the swap\\n        ISwapRouter.ExactInputSingleParams memory params =\\n        ISwapRouter.ExactInputSingleParams({\\n            tokenIn: WETH9,\\n            tokenOut: DAI,\\n            fee: feeTier,\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountIn: amountIn,\\n            amountOutMinimum: 0,\\n            sqrtPriceLimitX96: 0\\n        });\\n        // The call to `exactInputSingle` executes the swap.\\n        amountOut = swapRouter.exactInputSingle(params);\\n        return amountOut;\\n    }\\n\\n    function swapWETHForWBTC(uint amountIn) external returns (uint256 amountOut) {\\n        // Transfer the specified amount of WETH9 to this contract.\\n        TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);\\n        // Approve the router to spend WETH9.\\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\\n        // Create the params that will be used to execute the swap\\n        ISwapRouter.ExactInputSingleParams memory params =\\n        ISwapRouter.ExactInputSingleParams({\\n            tokenIn: WETH9,\\n            tokenOut: WBTC,\\n            fee: feeTier,\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountIn: amountIn,\\n            amountOutMinimum: 0,\\n            sqrtPriceLimitX96: 0\\n        });\\n        // The call to `exactInputSingle` executes the swap.\\n        amountOut = swapRouter.exactInputSingle(params);\\n        return amountOut;\\n    }\\n\\n    function swapWETHForToken(address tokenOut, uint amountIn) external returns (uint256 amountOut) {\\n        // Transfer the specified amount of WETH9 to this contract.\\n        TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);\\n        // Approve the router to spend WETH9.\\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\\n        // Create the params that will be used to execute the swap\\n        ISwapRouter.ExactInputSingleParams memory params =\\n        ISwapRouter.ExactInputSingleParams({\\n            tokenIn: WETH9,\\n            tokenOut: tokenOut,\\n            fee: feeTier,\\n            recipient: msg.sender,\\n            deadline: block.timestamp,\\n            amountIn: amountIn,\\n            amountOutMinimum: 0,\\n            sqrtPriceLimitX96: 0\\n        });\\n        // The call to `exactInputSingle` executes the swap.\\n        amountOut = swapRouter.exactInputSingle(params);\\n        return amountOut;\\n    }\\n}\",\"keccak256\":\"0x86fdb922afcf0d32f66d7d3857e30ae90a65985bf4a250da036dbd07be388c28\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a03461007e57601f6107e838819003918201601f19168301916001600160401b038311848410176100835780849260209460405283398101031261007e57516001600160a01b038116810361007e5760805260405161074e908161009a823960805181818160c0015281816101a6015281816102c2015261039d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081630804db36146103735781632ed5016f146102985781634a1d184214610167575080634aa4a4fc146101395780634dede3de1461010b57806372f5d98a146100ef578063c31c9c07146100ac5763e0bab4c41461007b57600080fd5b346100a857816003193601126100a85760209051736b175474e89094c44da98b954eedeac495271d0f8152f35b5080fd5b50346100a857816003193601126100a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a857816003193601126100a85760209051610bb88152f35b50346100a857816003193601126100a85760209051732260fac5e5542a773aa44fbcfedf7c193bc2c5998152f35b50346100a857816003193601126100a8576020905173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28152f35b8383346100a857806003193601126100a8576001600160a01b039280358481169190829003610294579061023a91602435956101a4873033610562565b7f0000000000000000000000000000000000000000000000000000000000000000166101d08782610642565b8451916101dc8361044a565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28352602097889485850152610bb88785015233606085015242608085015260a08401528660c08401528660e084015286865180968195829463414bf38960e01b8452830161049f565b03925af1928315610289578093610254575b505051908152f35b909192508382813d8311610282575b61026d818361047c565b8101031261027f57505190838061024c565b80fd5b503d610263565b8251903d90823e3d90fd5b8380fd5b8383346100a8576020928360031936011261036f57838161023a9235906102c0823033610562565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906102f58383610642565b8551926103018461044a565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28452736b175474e89094c44da98b954eedeac495271d0f85850152610bb88785015233606085015242608085015260a08401528660c08401528660e084015286865180968195829463414bf38960e01b8452830161049f565b8280fd5b8383346100a8576020928360031936011261036f57838161023a92359061039b823033610562565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906103d08383610642565b8551926103dc8461044a565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28452732260fac5e5542a773aa44fbcfedf7c193bc2c59985850152610bb88785015233606085015242608085015260a08401528660c08401528660e084015286865180968195829463414bf38960e01b8452830161049f565b61010081019081106001600160401b0382111761046657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761046657604052565b91909160e06101008201938160018060a01b039182815116855282602082015116602086015262ffffff60408201511660408601528260608201511660608601526080810151608086015260a081015160a086015260c081015160c0860152015116910152565b3d15610540573d906001600160401b0382116104665760405191610534601f8201601f19166020018461047c565b82523d6000602084013e565b606090565b9081602091031261055d5751801515810361055d5790565b600080fd5b6040516323b872dd60e01b602082019081526001600160a01b03928316602483015292909116604482015260648082019390935291825260a08201908282106001600160401b0383111761046657600092839260405251908273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16105da610506565b81610613575b50156105e857565b60405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606490fd5b8051801592508215610628575b5050386105e0565b61063b9250602080918301019101610545565b3880610620565b60405163095ea7b360e01b602082019081526001600160a01b03909216602482015260448082019390935291825260808201906001600160401b0382118383101761046657600092839260405251908273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16106b1610506565b816106e9575b50156106bf57565b60405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b80518015925082156106fe575b5050386106b7565b6107119250602080918301019101610545565b38806106f656fea2646970667358221220dae802ba910dc138fdf3cac51398bae8cb0209fe81661cf51193140696b89ea564736f6c63430008110033",
  "deployedBytecode": "0x6040608081526004908136101561001557600080fd5b600091823560e01c9081630804db36146103735781632ed5016f146102985781634a1d184214610167575080634aa4a4fc146101395780634dede3de1461010b57806372f5d98a146100ef578063c31c9c07146100ac5763e0bab4c41461007b57600080fd5b346100a857816003193601126100a85760209051736b175474e89094c44da98b954eedeac495271d0f8152f35b5080fd5b50346100a857816003193601126100a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100a857816003193601126100a85760209051610bb88152f35b50346100a857816003193601126100a85760209051732260fac5e5542a773aa44fbcfedf7c193bc2c5998152f35b50346100a857816003193601126100a8576020905173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28152f35b8383346100a857806003193601126100a8576001600160a01b039280358481169190829003610294579061023a91602435956101a4873033610562565b7f0000000000000000000000000000000000000000000000000000000000000000166101d08782610642565b8451916101dc8361044a565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28352602097889485850152610bb88785015233606085015242608085015260a08401528660c08401528660e084015286865180968195829463414bf38960e01b8452830161049f565b03925af1928315610289578093610254575b505051908152f35b909192508382813d8311610282575b61026d818361047c565b8101031261027f57505190838061024c565b80fd5b503d610263565b8251903d90823e3d90fd5b8380fd5b8383346100a8576020928360031936011261036f57838161023a9235906102c0823033610562565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906102f58383610642565b8551926103018461044a565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28452736b175474e89094c44da98b954eedeac495271d0f85850152610bb88785015233606085015242608085015260a08401528660c08401528660e084015286865180968195829463414bf38960e01b8452830161049f565b8280fd5b8383346100a8576020928360031936011261036f57838161023a92359061039b823033610562565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906103d08383610642565b8551926103dc8461044a565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28452732260fac5e5542a773aa44fbcfedf7c193bc2c59985850152610bb88785015233606085015242608085015260a08401528660c08401528660e084015286865180968195829463414bf38960e01b8452830161049f565b61010081019081106001600160401b0382111761046657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761046657604052565b91909160e06101008201938160018060a01b039182815116855282602082015116602086015262ffffff60408201511660408601528260608201511660608601526080810151608086015260a081015160a086015260c081015160c0860152015116910152565b3d15610540573d906001600160401b0382116104665760405191610534601f8201601f19166020018461047c565b82523d6000602084013e565b606090565b9081602091031261055d5751801515810361055d5790565b600080fd5b6040516323b872dd60e01b602082019081526001600160a01b03928316602483015292909116604482015260648082019390935291825260a08201908282106001600160401b0383111761046657600092839260405251908273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16105da610506565b81610613575b50156105e857565b60405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606490fd5b8051801592508215610628575b5050386105e0565b61063b9250602080918301019101610545565b3880610620565b60405163095ea7b360e01b602082019081526001600160a01b03909216602482015260448082019390935291825260808201906001600160401b0382118383101761046657600092839260405251908273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc25af16106b1610506565b816106e9575b50156106bf57565b60405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606490fd5b80518015925082156106fe575b5050386106b7565b6107119250602080918301019101610545565b38806106f656fea2646970667358221220dae802ba910dc138fdf3cac51398bae8cb0209fe81661cf51193140696b89ea564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}